// Speak & Spell sound board for the Adafruit NeoTrellis M4.
// Requires the following libraries, install with the Arduino Library Manager:
//  - Adafruit_NeoTrellisM4
//  - Adafruit_Keypad
//  - Adafruit_NeoPixel
// Also requires the Adafruit fork of the Talkie library, install manually:
//  - https://github.com/adafruit/Talkie
//
// Tap buttons to hear letters and numbers. Hold buttons for words and phrases.
// The sounds you're hearing are not simply WAV files. Instead, the Talkie
// library emulates the TMS5100 speech chip used in the original Speak & Spell.
// The tables below contain a selection of speech data exactly as it was stored
// in the original ROM in a highly-compressed lossy format called LPC-10.

#include <Adafruit_NeoTrellisM4.h>
#include <talkie.h>

Adafruit_NeoTrellisM4 trellis;
Talkie                voice;

// Letters and numbers
const uint8_t spA[] PROGMEM = {0x2B, 0xE5, 0x64, 0xA6, 0xDD, 0x73, 0x6F, 0xBA, 0xE9, 0xE6, 0x53, 0xB2, 0x53, 0xF5, 0x9E, 0x3A, 0xB7, 0xDC, 0x72, 0xCB, 0x29, 0xD5, 0x09, 0x5B, 0x6F, 0xED, 0x5B, 0x6E, 0xB9, 0xF9, 0x86, 0xED, 0xA6, 0xEB, 0xB6, 0xDA, 0x6C, 0xAD, 0x79};
const uint8_t spB[] PROGMEM = {0xA2, 0xC0, 0x58, 0xEE, 0x55, 0x91, 0x64, 0xE1, 0x85, 0x17, 0x9E, 0x8E, 0xF1, 0x5C, 0xDC, 0x27, 0x6B, 0x1E, 0x13, 0x18, 0x7B, 0x6E, 0x87, 0x3E, 0x26, 0x1A, 0x12, 0xBF, 0x8D, 0x72, 0x6C, 0x35, 0x42, 0x3A, 0x5B, 0xE5, 0xD8, 0x1A, 0x84, 0x64, 0x2F, 0xF6, 0x75, 0xD7, 0xDF, 0x70, 0xC3, 0x8D, 0x37, 0xDE, 0x78, 0xC3, 0x70, 0x89, 0x93, 0xDD, 0x26, 0xB5, 0x69, 0xA6, 0xF1, 0xE6, 0x01};
const uint8_t spC[] PROGMEM = {0x04, 0xBC, 0x59, 0xA5, 0x81, 0x05, 0x1E, 0x44, 0x90, 0xC0, 0x69, 0x99, 0x11, 0x78, 0x70, 0x8C, 0xB7, 0xCA, 0xD1, 0x13, 0xEB, 0x98, 0x28, 0x45, 0xAB, 0xBB, 0xD2, 0x71, 0xC9, 0x91, 0xD4, 0x4C, 0x94, 0x1B, 0x76, 0x5C, 0xB9, 0x58, 0x41, 0xFF, 0x8E, 0xBC, 0xCB, 0xAC, 0xB3, 0xED, 0x36, 0x6A, 0xD6, 0xC4, 0x37, 0x4D, 0x75, 0xE6, 0x19, 0x7B, 0xAC, 0x51, 0xC7, 0x07};
const uint8_t spD[] PROGMEM = {0xA1, 0x42, 0x5B, 0x95, 0x15, 0x94, 0x6C, 0x2D, 0xA0, 0xC8, 0xD0, 0xE3, 0xAB, 0x16, 0x96, 0x99, 0xCA, 0xD7, 0x1D, 0x37, 0x82, 0x31, 0xE6, 0x4E, 0x39, 0xBE, 0x79, 0x45, 0x9D, 0x8B, 0x7A, 0xC3, 0x8D, 0x37, 0xED, 0xB4, 0xF3, 0xCE, 0x33, 0x8F, 0x98, 0x25, 0xCA, 0x4D, 0x51, 0xDD, 0xBE, 0xBB, 0x68, 0xBD, 0x7D};
const uint8_t spE[] PROGMEM = {0xCE, 0x75, 0x2D, 0xE8, 0x7B, 0x51, 0xBA, 0x9B, 0x6E, 0xBB, 0x1D, 0x76, 0xDC, 0x71, 0xC7, 0x9D, 0x76, 0x1A, 0xB1, 0x28, 0xA6, 0xBA, 0xB1, 0x3B, 0x43, 0xF7, 0xDD, 0x55, 0x9B, 0xAD, 0xB7, 0xDA, 0x3E};
const uint8_t spF[] PROGMEM = {0x23, 0x46, 0xEB, 0x9A, 0xDB, 0x95, 0x6F, 0xBC, 0xFE, 0xF8, 0xE0, 0x3C, 0xDA, 0x7B, 0xD6, 0x0D, 0x37, 0x1C, 0x6F, 0x92, 0xB5, 0xE5, 0x56, 0x5D, 0x46, 0xB5, 0xF0, 0xD4, 0x0B, 0xDD, 0x8C, 0x51, 0xED, 0xA9, 0x61, 0xD9, 0x81, 0x14, 0x2A, 0x1C, 0x28, 0xA1, 0xD3, 0x81, 0x12, 0x33, 0x2D, 0xD0, 0x40, 0x03, 0x09, 0x1E};
const uint8_t spG[] PROGMEM = {0xC3, 0xF6, 0x96, 0x66, 0xAA, 0x62, 0xB6, 0x4D, 0xA0, 0xEF, 0x9D, 0x0C, 0x8E, 0xCD, 0xD5, 0x89, 0xAC, 0x3A, 0x1F, 0x9B, 0x8B, 0x32, 0x4E, 0x3E, 0x39, 0xB6, 0x54, 0x23, 0xAC, 0x5A, 0x7C, 0xFD, 0x8C, 0x2D, 0x67, 0x8F, 0x1C, 0x37, 0x61, 0x7A, 0xE9, 0xAD, 0xB4, 0xE4, 0x90, 0x7B, 0x3A, 0x6C, 0x6D, 0xB5, 0xF6, 0x3A, 0xCB, 0xC8, 0xC5, 0x33, 0x55, 0x87, 0xF5, 0x1E, 0x7D, 0x7C};
const uint8_t spH[] PROGMEM = {0x27, 0xA6, 0xA8, 0x1A, 0xD3, 0x71, 0x4F, 0x4C, 0x99, 0x35, 0xA6, 0xE2, 0x9C, 0x58, 0xAB, 0x8B, 0x64, 0xC5, 0x3D, 0xB1, 0x36, 0x43, 0xEE, 0x4A, 0x7A, 0xD3, 0x49, 0xBD, 0x24, 0xE0, 0x4C, 0x9D, 0x1D, 0xBA, 0xB5, 0x1A, 0x40, 0x02, 0x03, 0xDA, 0xBA, 0xC9, 0x20, 0x80, 0xBE, 0x6E, 0x23, 0x88, 0x20, 0x80, 0xBA, 0x67, 0x3C, 0xE0, 0xE0, 0x01};
const uint8_t spI[] PROGMEM = {0x27, 0x9A, 0x3C, 0xA5, 0x39, 0xB6, 0x6F, 0xB8, 0xE1, 0x86, 0x1B, 0x6E, 0xBC, 0xE9, 0xA6, 0x93, 0xEC, 0x8C, 0xB4, 0x1A, 0x2B, 0x37, 0xDD, 0x74, 0x92, 0x2B, 0x1E, 0x9D, 0x1D, 0xF6, 0xA6, 0x13, 0x43, 0x56, 0xCF, 0xEE, 0x48, 0xD7, 0x1D, 0x1B, 0xB4, 0x7A, 0x77, 0x98, 0x1E, 0xC6, 0x4B, 0xD6, 0xF7, 0xA4, 0x5A, 0x4D, 0x34, 0x0F};
const uint8_t spJ[] PROGMEM = {0xC1, 0xCE, 0x7E, 0x65, 0xC2, 0x74, 0xB6, 0x4D, 0x60, 0xF6, 0xAB, 0x63, 0x83, 0x17, 0xD1, 0xCD, 0x59, 0xC7, 0xC6, 0x68, 0x6A, 0x9D, 0x93, 0xAF, 0x3D, 0xDE, 0x3B, 0xF5, 0x9E, 0x2A, 0x73, 0xC3, 0x8D, 0xB7, 0x9C, 0xEA, 0x9D, 0xD8, 0xD5, 0xD8, 0xB9, 0x6D, 0x35, 0x4B, 0x23, 0xAE, 0x4D, 0xCE, 0xAE, 0xAB, 0x46, 0x4F, 0x92, 0x33, 0x71, 0x76, 0xBD, 0x79, 0xA5, 0x68, 0x49, 0xA7, 0x47, 0xD2, 0x08, 0x49, 0xB2, 0x7C, 0xA7, 0xD8, 0xEA, 0x93, 0xF5, 0x54, 0xBC, 0xD5, 0x95, 0x45, 0xFB};
const uint8_t spK[] PROGMEM = {0x06, 0xCC, 0xE5, 0x96, 0x40, 0x4D, 0xA6, 0x11, 0x1C, 0x67, 0xB5, 0xE7, 0x4C, 0x5A, 0xB9, 0xFE, 0x84, 0xE8, 0xCC, 0xB2, 0x3B, 0xF2, 0x8D, 0x37, 0xDF, 0x72, 0xAA, 0x67, 0x3A, 0x33, 0x61, 0x65, 0xB7, 0xDD, 0x56, 0x4B, 0x94, 0xA3, 0xB7, 0xC5, 0xEC, 0xB6, 0xDB, 0x2E, 0x27, 0x67, 0xA6, 0x72, 0x93, 0x54, 0x6F, 0xD8, 0x21, 0xF9, 0xC0, 0xD1, 0xC7, 0x2C, 0x49, 0xF4, 0xD6, 0x3F};
const uint8_t spL[] PROGMEM = {0x27, 0x86, 0xA8, 0x51, 0x3D, 0x76, 0x6E, 0xBC, 0xF1, 0x44, 0x67, 0x23, 0xA2, 0xA6, 0xCA, 0x4D, 0x27, 0xDB, 0x18, 0x69, 0xBD, 0x55, 0x4F, 0x36, 0x25, 0xCC, 0x67, 0xE2, 0xDE, 0x7C, 0x8A, 0x1A, 0xE9, 0x5A, 0x9B, 0x64, 0x97, 0x55, 0x94, 0xEF, 0x21, 0x9B, 0xBA, 0x3B, 0xEF, 0xB8, 0x82, 0x56, 0x75, 0x24, 0x59, 0x6D, 0xBB, 0x69, 0xA6, 0x69, 0x46, 0xB8, 0x2E, 0xB4, 0x76, 0x54, 0x8D, 0x37, 0x0F};
const uint8_t spM[] PROGMEM = {0xC7, 0x07, 0x69, 0x52, 0x67, 0x92, 0xAF, 0x3F, 0x21, 0x5A, 0x53, 0xEF, 0x8A, 0x7C, 0xC3, 0x8D, 0x27, 0x7A, 0x5F, 0x6E, 0xE6, 0xAB, 0x4E, 0xB4, 0x3E, 0xC3, 0xD4, 0x1B, 0x9D, 0xE8, 0x9D, 0x96, 0x53, 0xA8, 0x59, 0x39, 0x1B, 0xF1, 0x62, 0x67, 0x7A, 0xF3, 0x49, 0x49, 0x58, 0x26, 0x99, 0xD2, 0x1D, 0xB7, 0xDD, 0xFA, 0xEA, 0x65, 0x4C, 0x48, 0x57, 0x31, 0x47, 0xD1, 0x3C};
const uint8_t spN[] PROGMEM = {0xC7, 0xC7, 0x68, 0x9A, 0x5D, 0x61, 0xAE, 0xBF, 0xFE, 0xF8, 0x10, 0xDC, 0xA2, 0x3B, 0xCC, 0x0D, 0x37, 0xDC, 0x70, 0x92, 0xCF, 0x6E, 0xD1, 0x65, 0xE5, 0xE6, 0x9B, 0x6F, 0xDA, 0xF1, 0x58, 0x2F, 0xD9, 0x3D, 0xBD, 0xEE, 0xB6, 0xDB, 0x6C, 0x3D, 0xF5, 0x54, 0x5D, 0x15, 0x65, 0x74, 0x70, 0x86, 0x9A, 0xCC, 0xFA, 0x01};
const uint8_t spO[] PROGMEM = {0xCB, 0xC8, 0xDA, 0x25, 0x61, 0x49, 0xAF, 0x3F, 0x5E, 0xB4, 0x09, 0xF5, 0xF0, 0xB2, 0x3C, 0xDF, 0x65, 0x16, 0xE1, 0x65, 0x87, 0x15, 0x79, 0xDE, 0x10, 0x2B, 0x27, 0x3B, 0xED, 0xBC, 0xCB, 0x2E, 0xAD, 0xB2, 0xBC, 0x21, 0x1C, 0x9D, 0x7B, 0xED, 0xA5, 0xA7, 0x1E, 0xAB, 0x4F, 0x8E, 0xE5, 0x65, 0xD5, 0x5C, 0xAC, 0xDD, 0x03};
const uint8_t spP[] PROGMEM = {0x01, 0xD4, 0x90, 0x61, 0x40, 0xAC, 0xE5, 0xC3, 0x14, 0x4B, 0x52, 0xB3, 0xB2, 0xB7, 0x3D, 0x2E, 0x59, 0x92, 0x9A, 0x95, 0xBD, 0x7C, 0x0E, 0x20, 0x39, 0x2B, 0xFB, 0x84, 0xA2, 0x05, 0xF3, 0xD3, 0xD1, 0x8E, 0x23, 0xD5, 0xA0, 0xA0, 0x3B, 0x51, 0x66, 0xDE, 0x65, 0x96, 0x55, 0xAA, 0x13, 0xAC, 0x5D, 0xD3, 0xBB, 0xDC, 0xB0, 0xCD, 0xD6, 0x43, 0x07, 0xCE, 0xF6, 0x13, 0xF4, 0x8A, 0xB2, 0xC8, 0xE2, 0x4B, 0x99, 0x46, 0xA5, 0xD5, 0x03};
const uint8_t spQ[] PROGMEM = {0x0E, 0x8C, 0x3D, 0xE5, 0x41, 0x04, 0x01, 0xCC, 0x91, 0xB1, 0x5C, 0xF6, 0xCC, 0x9A, 0x35, 0xFB, 0xF8, 0x58, 0x88, 0x2D, 0x7B, 0xD1, 0x0E, 0x2B, 0x86, 0x82, 0x92, 0xD1, 0xB3, 0x57, 0xF2, 0x4E, 0x39, 0x32, 0x16, 0x8E, 0xAC, 0x59, 0xB8, 0x76, 0x3B, 0x6E, 0x45, 0xCA, 0x0C, 0x9D, 0x4E, 0xD5, 0x6B, 0xAA, 0x34, 0x95, 0x46, 0x75, 0xCB, 0xD4, 0x68, 0x2A, 0x0B, 0xAB, 0x0E, 0xB9, 0x95, 0x2A, 0xC4, 0x94, 0x9B, 0xFA, 0xAA, 0xA5, 0xE6, 0x12, 0x84, 0xEC, 0x34, 0x93, 0xDC, 0xD5, 0x67, 0xF7};
const uint8_t spR[] PROGMEM = {0x23, 0xA8, 0x3A, 0xC3, 0xE9, 0x8D, 0x6F, 0xBC, 0xF1, 0x44, 0x9D, 0x7A, 0x39, 0x32, 0xF5, 0xCD, 0x37, 0xDF, 0x72, 0x8A, 0x1A, 0x39, 0xEA, 0xD5, 0xE8, 0x54, 0xB5, 0xD3, 0xBD, 0xB2, 0xE5, 0xAD, 0xB7, 0x9E, 0x6A, 0x56, 0xE8, 0x84, 0x77, 0x3E, 0xC5, 0x1C, 0xF5, 0x8E, 0x6C, 0x77, 0xD3, 0x09, 0x36, 0x96, 0xE4, 0x68, 0xC6, 0xEB, 0xA6, 0xAD, 0x26, 0x9A, 0x07};
const uint8_t spS[] PROGMEM = {0x2D, 0x16, 0x1D, 0x16, 0x5D, 0xB5, 0x6F, 0xBC, 0xF1, 0xC6, 0x13, 0x62, 0x70, 0xAB, 0xDA, 0x5A, 0x37, 0x9C, 0x60, 0xA2, 0x7B, 0xE5, 0x5A, 0x19, 0x5A, 0xD9, 0xD2, 0x8E, 0x91, 0x9A, 0x55, 0x00, 0xD3, 0x45, 0x3A, 0xB0, 0x73, 0x96, 0x07, 0x0E, 0xDC, 0xEA, 0xE9, 0x81, 0x07, 0x1E, 0x38, 0xF0, 0x4B, 0x84, 0x06, 0x14, 0x3C};
const uint8_t spT[] PROGMEM = {0x01, 0x8C, 0x32, 0xE1, 0x81, 0x05, 0x4D, 0x7B, 0x4E, 0x3E, 0x97, 0x94, 0x96, 0x2E, 0x8E, 0xD8, 0xB6, 0xA3, 0x5C, 0x73, 0x5C, 0x49, 0xC8, 0x76, 0x63, 0x7B, 0x87, 0x91, 0x1A, 0x05, 0x9B, 0x49, 0xBB, 0xA3, 0x64, 0xC2, 0xDA, 0xDF, 0x62, 0x7A, 0xED, 0xB5, 0xD7, 0x59, 0x47, 0x6A, 0x9A, 0xA9, 0xE6, 0xC4, 0xCC, 0xD0, 0x5C, 0x62, 0x2C, 0x3F, 0x41, 0x2F, 0xD9, 0x28, 0x48, 0x2E, 0x93, 0x69, 0xD4, 0x0F};
const uint8_t spU[] PROGMEM = {0xA9, 0x14, 0x0E, 0x5E, 0x5D, 0xA1, 0x6A, 0xE9, 0xB9, 0xA5, 0xC4, 0xC9, 0xBC, 0xBB, 0xD6, 0x4C, 0x33, 0xAE, 0x10, 0xA3, 0x30, 0x57, 0x6C, 0xBA, 0x7E, 0xFB, 0x13, 0xAC, 0x32, 0xB3, 0xB4, 0xCD, 0x23, 0x48, 0xE3, 0xEE, 0x61, 0x9F, 0x5A, 0x14, 0xD1, 0xCD, 0x35, 0x1F, 0xF6, 0x5C, 0x32, 0xF3, 0x6D, 0x1A, 0xD9, 0xB2, 0x65, 0x21, 0x3B, 0xD5, 0xA4, 0x4F, 0x4D, 0x3D, 0x24, 0x4B, 0x47, 0xAA, 0x4A, 0x2E, 0x89, 0x46, 0xEB, 0x07};
const uint8_t spV[] PROGMEM = {0xA9, 0x18, 0xE3, 0x6A, 0xE1, 0xB5, 0x72, 0xC9, 0x25, 0x96, 0x52, 0xBC, 0x70, 0x53, 0xF3, 0x34, 0xB9, 0xA4, 0x1C, 0xB5, 0x88, 0x67, 0x24, 0x9A, 0x71, 0x39, 0x27, 0xD9, 0x6A, 0x3B, 0xF4, 0x72, 0x49, 0x93, 0xC4, 0x6E, 0x98, 0xE5, 0xB3, 0x43, 0xB1, 0x5D, 0xDB, 0x2B, 0x64, 0x87, 0x1C, 0x37, 0x76, 0x76, 0x9C, 0xA9, 0xA7, 0x9E, 0x66, 0x1E, 0x39, 0x09, 0x92, 0xBD, 0xA2, 0xBA, 0xF3, 0x8E, 0x33, 0x74, 0xE7, 0xED, 0x03};
const uint8_t spW[] PROGMEM = {0x2C, 0x23, 0x9B, 0x59, 0x93, 0x12, 0x6C, 0x3E, 0xAE, 0x7B, 0x33, 0x35, 0xF5, 0x72, 0xAC, 0x91, 0x91, 0x9D, 0x59, 0xE9, 0x58, 0x59, 0x2B, 0xB3, 0x2A, 0xD2, 0xB1, 0xA2, 0xA6, 0xAB, 0x95, 0xC1, 0x6A, 0x9D, 0x65, 0xD9, 0x8D, 0xAC, 0x42, 0x0D, 0x6F, 0x79, 0x4C, 0x90, 0xF5, 0x5C, 0x41, 0xE9, 0x1C, 0x96, 0x5C, 0x78, 0x92, 0xD5, 0x51, 0x62, 0xF6, 0xF2, 0xE6, 0x91, 0x83, 0x55, 0x37, 0xE7, 0x35, 0x25, 0x07, 0xAD, 0xAA, 0x15, 0x09, 0x5B, 0x4D, 0x5A, 0x44, 0xAA, 0x1A, 0xB5, 0x1A, 0x14, 0xAB, 0xD7, 0xD6, 0x98, 0x75, 0xB5, 0x10, 0x55, 0xB4, 0x63, 0xC1, 0x6A, 0xCE, 0x9B, 0x59, 0xD9, 0xC2, 0x55, 0x9D, 0x0D, 0x77, 0x97, 0x55, 0x23, 0x58, 0x1D, 0x91, 0x26, 0x8B, 0x53, 0x50, 0xD6, 0xB3, 0xC8, 0xE3, 0xFA, 0xF0};
const uint8_t spX[] PROGMEM = {0x27, 0x46, 0x6F, 0x1E, 0xD3, 0x55, 0x6E, 0xBC, 0xF1, 0xC6, 0x13, 0x83, 0x33, 0xED, 0xC9, 0xD2, 0xD7, 0x1F, 0x1F, 0x12, 0x6B, 0x65, 0x47, 0x8A, 0x9E, 0x81, 0x68, 0x82, 0x31, 0x00, 0x0F, 0x02, 0x98, 0x6E, 0x36, 0x80, 0x9F, 0xBB, 0x03, 0xF8, 0xB3, 0xD3, 0x02, 0x03, 0xDE, 0xCC, 0xD0, 0x40, 0x03, 0x0B, 0x30, 0x78};
const uint8_t spY[] PROGMEM = {0x26, 0x93, 0xD5, 0x26, 0x96, 0x8E, 0x7C, 0xCE, 0xA9, 0x25, 0x76, 0x3A, 0xD9, 0x43, 0xC9, 0x8E, 0x27, 0xAA, 0x38, 0x63, 0xEE, 0x5E, 0x4E, 0x34, 0x76, 0x57, 0x3D, 0xD2, 0x9C, 0xA8, 0xD3, 0x16, 0x67, 0xC5, 0xBE, 0xE9, 0xE6, 0x53, 0xCC, 0x2E, 0xF3, 0xAE, 0xB0, 0xB7, 0xDE, 0x76, 0xDB, 0x6E, 0xA7, 0xBA, 0xAC, 0xD1, 0xD9, 0xE6, 0x4E, 0x0A, 0x49, 0xBD, 0x73, 0xCD, 0x9C, 0x10, 0x93, 0x6A, 0xE6, 0x84, 0x3E, 0x2E, 0x2A, 0xB1, 0xCB, 0x94, 0xB2, 0x4D, 0xD3, 0x8E, 0xA9, 0x8D, 0xBB, 0xB4, 0xAC, 0x1F};
const uint8_t spZ[] PROGMEM = {0x23, 0x2E, 0xA9, 0xEC, 0x6E, 0xAE, 0x67, 0xDC, 0x31, 0x80, 0x25, 0x95, 0x8F, 0xCB, 0xCA, 0xC5, 0xA4, 0x56, 0x1E, 0x17, 0x9D, 0x98, 0x64, 0x5D, 0x3A, 0x3E, 0x59, 0x56, 0xED, 0xBA, 0x7C, 0x42, 0xF1, 0x22, 0xD2, 0x3D, 0xF9, 0xA6, 0x93, 0xB2, 0x61, 0xB1, 0x9B, 0xD0, 0x3B, 0xEF, 0x7C, 0x72, 0x4E, 0xC4, 0xB1, 0x13, 0xFA, 0xA6, 0x1B, 0xAE, 0xED, 0x26, 0xAB, 0x07};
const uint8_t sp0[] PROGMEM = {0xC1, 0x3D, 0x47, 0x6A, 0x9E, 0x6E, 0xBA, 0x0B, 0xE0, 0x78, 0xB6, 0x08, 0x96, 0x8B, 0x5C, 0x25, 0x3A, 0x1F, 0x1E, 0x9F, 0x2C, 0x8B, 0x76, 0x2D, 0x3C, 0x3E, 0x68, 0x55, 0x1D, 0x6F, 0x7D, 0xC3, 0x0D, 0x2B, 0x2A, 0x67, 0x21, 0xE5, 0x6D, 0x5A, 0xE6, 0x4D, 0x23, 0x34, 0xB2, 0xB6, 0x2C, 0xA6, 0x78, 0x49, 0x76, 0xD9, 0xF9, 0x14, 0xD5, 0x3D, 0x2D, 0xB2, 0xF5, 0x29, 0xAA, 0x7A, 0x8B, 0xF7, 0xAA, 0x53, 0x55, 0x8D, 0x61, 0xDF, 0x26, 0xA7, 0xEA, 0x94, 0xA3, 0x9A, 0x4B, 0x6F, 0x39, 0x51, 0xAB, 0x1E, 0x17, 0xEF, 0xB4, 0xBC, 0x52, 0xDB, 0x22, 0x91, 0xBA, 0x19, 0x91, 0xCE, 0xC4, 0xBD, 0x51, 0x12, 0x3C, 0x9E, 0x53, 0x6A, 0x2D, 0xCF, 0x34, 0x7D};
const uint8_t sp1[] PROGMEM = {0x26, 0x92, 0xD1, 0x69, 0x12, 0x56, 0x7D, 0xCC, 0x71, 0x05, 0xE1, 0xFB, 0x94, 0x3D, 0xC9, 0x09, 0x46, 0xD7, 0x05, 0x45, 0x92, 0x13, 0xBD, 0x8C, 0x37, 0xF5, 0x7A, 0x27, 0x59, 0xD7, 0xC3, 0x9E, 0xC9, 0x6E, 0x3E, 0xC5, 0xA6, 0x4A, 0x8E, 0x49, 0x7A, 0xCB, 0x29, 0x3E, 0xA4, 0x6B, 0xAC, 0x9D, 0x5B, 0x76, 0x69, 0xCE, 0x2B, 0x2C, 0xAB, 0x48, 0xD2, 0x4D, 0x51, 0xDC, 0x78, 0x47, 0x45, 0xEC, 0x2C, 0x12, 0x57, 0x32, 0x35, 0xAA, 0xCC, 0x64, 0xA6, 0xD9, 0x03};
const uint8_t sp2[] PROGMEM = {0x09, 0xB4, 0x1D, 0x99, 0xC0, 0x1E, 0xD9, 0x01, 0xB4, 0xD8, 0x63, 0x40, 0x2A, 0xDD, 0xCD, 0x08, 0x91, 0x9E, 0x93, 0x36, 0x8E, 0x55, 0xC6, 0xCD, 0x3B, 0x36, 0x1F, 0x6F, 0xA4, 0x79, 0x84, 0xF6, 0xBE, 0x61, 0xA7, 0x96, 0xA5, 0x8A, 0x74, 0xE7, 0x5D, 0xBD, 0xF4, 0x52, 0x8A, 0x86, 0x35, 0xE1, 0xA6, 0xA7, 0xE6, 0xEA, 0xAB, 0x49, 0x9A, 0xE4, 0xCC, 0xA2, 0xAC, 0x13, 0x04, 0xB5, 0x9D, 0xA1, 0x5E, 0x46, 0x8A, 0x07};
const uint8_t sp3[] PROGMEM = {0x08, 0xAC, 0xD6, 0xC9, 0x01, 0x03, 0x2B, 0x95, 0x07, 0xD0, 0x52, 0x46, 0x33, 0x8E, 0x47, 0x68, 0x58, 0x9D, 0x64, 0xC4, 0x62, 0xCF, 0x70, 0x2D, 0xC9, 0xC8, 0x23, 0x5A, 0x29, 0x6E, 0x6B, 0x5C, 0xD1, 0x2E, 0xB6, 0x70, 0x4D, 0x7B, 0xE3, 0x89, 0xB1, 0xB9, 0x61, 0x44, 0xD7, 0x13, 0x73, 0x70, 0xA1, 0xE8, 0xD5, 0xA7, 0x14, 0xAB, 0x22, 0x3D, 0xB3, 0x57, 0xC9, 0x56, 0xD8, 0x7A, 0x27, 0xEF, 0x3A, 0xEB, 0x28, 0xC5, 0x33, 0x75, 0x6D, 0xE8, 0x9D, 0x66, 0x58, 0x2E, 0x1B, 0x92, 0xEF, 0x12, 0xDB, 0xB5, 0x57, 0x41, 0x45, 0x8E, 0xDA, 0x56, 0xD2, 0x1F};
const uint8_t sp4[] PROGMEM = {0x0C, 0xB4, 0x12, 0x25, 0x81, 0x06, 0x11, 0x34, 0xCF, 0x76, 0xB9, 0x6A, 0x3A, 0x39, 0x41, 0xFA, 0x3C, 0xE7, 0x70, 0x7D, 0xA2, 0xD6, 0xF1, 0xC5, 0xEA, 0x71, 0x25, 0xE1, 0xEB, 0x0A, 0x22, 0xC9, 0xCC, 0x3B, 0x8F, 0xC2, 0x47, 0xA7, 0x53, 0xE4, 0x99, 0xB5, 0x55, 0xFE, 0xC2, 0x53, 0x6A, 0xF6, 0xA8, 0x72, 0xA5, 0xB6, 0x78, 0xE7, 0x55, 0x74, 0x2F, 0x69, 0xD3, 0x6E, 0x2B, 0xEB, 0x19, 0x3A, 0xE6, 0xD9, 0x8F, 0x37, 0xDD, 0x65, 0x5C, 0xBA, 0x6C, 0x33, 0xB5, 0x55, 0x0F};
const uint8_t sp5[] PROGMEM = {0x0A, 0xB4, 0x12, 0xE5, 0x81, 0x07, 0x16, 0x1C, 0x25, 0x7B, 0x54, 0x79, 0xC7, 0x3D, 0x41, 0xD5, 0x2C, 0xF1, 0x8E, 0x7B, 0xA2, 0x0D, 0xBD, 0xE2, 0x3D, 0xEF, 0x44, 0x13, 0xA7, 0x24, 0xA7, 0xEA, 0x49, 0xDE, 0xD5, 0x98, 0xF5, 0x94, 0x9B, 0x6F, 0xB9, 0xE5, 0xD6, 0x5B, 0x4F, 0x75, 0x25, 0xD2, 0x6A, 0xC6, 0x9C, 0x62, 0x9B, 0x45, 0xF6, 0x5A, 0x39, 0xD9, 0x15, 0xD3, 0xAE, 0xA9, 0x72, 0x62, 0x48, 0x2E, 0xD1, 0x5D, 0xE5, 0x38, 0xEF, 0x5D, 0xBC, 0xB2, 0xF6, 0x35, 0x4B, 0x07, 0x9D, 0xAA, 0xE9, 0xAB, 0xBB, 0x2E, 0x3A, 0x2A, 0x77, 0xD5, 0x70, 0xC2, 0x40, 0x54, 0xEE, 0x0F};
const uint8_t sp6[] PROGMEM = {0x04, 0x9C, 0x56, 0x25, 0x81, 0x05, 0x1E, 0x58, 0x10, 0xC0, 0x0E, 0x6E, 0x11, 0x1C, 0xEF, 0xBC, 0xBA, 0xC6, 0x55, 0x3E, 0xB1, 0x44, 0x37, 0xD5, 0x78, 0x7C, 0x52, 0x8A, 0x6E, 0x66, 0x73, 0xF7, 0xA4, 0xE2, 0x52, 0x34, 0xF2, 0xF6, 0x4A, 0x31, 0x29, 0x56, 0x55, 0x2C, 0x95, 0x9C, 0x71, 0xE9, 0xCD, 0xD0, 0x08, 0x58, 0x6D, 0x06, 0x20, 0xC0, 0x8A, 0xBD, 0x16, 0x38, 0xB0, 0x52, 0x95, 0x02, 0xA7, 0x57, 0x69, 0xA0, 0x01, 0x05, 0x0F};
const uint8_t sp7[] PROGMEM = {0x0A, 0xBC, 0x55, 0x61, 0x81, 0x07, 0x1E, 0x78, 0xE0, 0xC1, 0xB1, 0xD6, 0x79, 0x59, 0x5E, 0xE5, 0xEB, 0x8E, 0xD3, 0x25, 0xA2, 0x7B, 0xA2, 0x5E, 0xD7, 0x8A, 0x29, 0x61, 0xAA, 0x1E, 0xBB, 0x15, 0x13, 0x5A, 0xB5, 0x2B, 0xF1, 0x2D, 0xB7, 0xDC, 0x32, 0xCB, 0x08, 0xC1, 0x50, 0xB1, 0xA7, 0x97, 0x6E, 0xAB, 0x49, 0x5A, 0x09, 0x09, 0xF3, 0xF4, 0x14, 0x15, 0x03, 0x4A, 0x48, 0x3C};
const uint8_t sp8[] PROGMEM = {0xC7, 0x65, 0xEF, 0x92, 0x39, 0x76, 0x8E, 0x2B, 0x51, 0x34, 0x6A, 0xE2, 0x5E, 0x77, 0x5C, 0xB5, 0xCA, 0xD9, 0x13, 0xE7, 0xB8, 0x6C, 0x91, 0x7F, 0xDA, 0xF6, 0x36, 0x53, 0x37, 0x95, 0x08, 0x5B, 0x5F, 0x5B, 0xF0, 0x0A, 0x00, 0x34, 0x08, 0x60, 0xE4, 0x32, 0x05, 0x7A, 0xE9, 0x7A};
const uint8_t sp9[] PROGMEM = {0x26, 0x31, 0x63, 0x13, 0x1E, 0x51, 0x62, 0x0A, 0x51, 0x28, 0x79, 0x8D, 0xB4, 0xD5, 0x82, 0x51, 0xD4, 0xEE, 0x6D, 0x7B, 0xFA, 0xE3, 0x6D, 0x76, 0x9B, 0x0E, 0xDB, 0xC7, 0xFB, 0x50, 0x69, 0x3E, 0x61, 0x4F, 0xB0, 0xB1, 0xD3, 0x72, 0xE4, 0xDE, 0x70, 0x82, 0xCD, 0x13, 0x96, 0x23, 0xED, 0xC6, 0x1B, 0x6F, 0xBA, 0xF9, 0xE6, 0x93, 0x7D, 0x71, 0xF7, 0x1A, 0x25, 0x27, 0x87, 0x6C, 0x1E, 0xB9, 0xB2, 0x4F, 0x0E, 0x51, 0x3C, 0x6A, 0x68, 0x9F, 0x94, 0x1C, 0x5B, 0x65, 0x9B, 0xDE, 0x71, 0xF9, 0xA0, 0x55, 0x2A, 0xCB, 0xCA, 0x34, 0xCD, 0x78, 0xC3, 0xC5, 0x11, 0x69, 0xBA, 0x6E, 0xDA, 0x71, 0xF3, 0xB4, 0x70, 0x52, 0x75, 0xD6, 0x0F};
const uint8_t spTEN[] PROGMEM = {0x0E, 0xCC, 0x5C, 0xEA, 0x81, 0x02, 0x2D, 0xBB, 0x2F, 0x1A, 0x84, 0x66, 0x7A, 0x4A, 0x3E, 0xD4, 0x3B, 0x0B, 0xEF, 0xB0, 0x72, 0x68, 0x32, 0x1E, 0xDE, 0x19, 0xE5, 0xB0, 0x60, 0x3C, 0xA2, 0xD3, 0xEA, 0x11, 0x2E, 0x98, 0x55, 0xA7, 0x9D, 0x63, 0x7C, 0x36, 0xCB, 0x4E, 0x3B, 0xD7, 0xDD, 0x70, 0xD3, 0xAD, 0xAB, 0xC7, 0x24, 0x4E, 0xE6, 0x69, 0xC7, 0xC8, 0x45, 0x9D, 0xC5, 0xBC, 0x8F, 0x91, 0x93, 0x99, 0x50, 0x78, 0xEF, 0x23, 0x8E, 0x39, 0xFA, 0x98, 0x43, 0x81, 0x90, 0x43, 0x39, 0x78};
// Different startup beep sequences
const uint8_t spBEEPS1[] PROGMEM = {0x85, 0x98, 0x1F, 0x1E, 0xE6, 0xB2, 0x2B, 0xA9, 0xA4, 0x92, 0x4A, 0x2A, 0x81, 0x06, 0xE3, 0x0F, 0x0F, 0x73, 0xD9, 0x1D, 0x76, 0xD8, 0x61, 0x87, 0x1D, 0x42, 0x40, 0xE2, 0x87, 0x87, 0xB9, 0xEC, 0x88, 0x22, 0x8A, 0x28, 0xA2, 0x88, 0xA0, 0xF1, 0xF4, 0xC3, 0xC3, 0x5C, 0x76, 0xE7, 0x9D, 0x77, 0xDE, 0x79, 0xE7, 0xF0};
const uint8_t spBEEPS2[] PROGMEM = {0x86, 0x93, 0x1F, 0x1E, 0xE6, 0xB2, 0x2D, 0xB7, 0xDC, 0x72, 0xCB, 0x2D, 0x07, 0x43, 0xE8, 0x0F, 0x0F, 0x73, 0xD9, 0x96, 0x58, 0x62, 0x89, 0x25, 0x96, 0x80, 0x51, 0xF8, 0x87, 0x87, 0xB9, 0x6C, 0xAB, 0xAC, 0xB2, 0xCA, 0x2A, 0xAB, 0xC0, 0x09, 0xF6, 0xC3, 0xC3, 0x5C, 0xB6, 0x17, 0x5E, 0x78, 0xE1, 0x85, 0x17, 0xF0};
const uint8_t spBEEPS3[] PROGMEM = {0x8E, 0xF2, 0x1F, 0x1E, 0xE6, 0xB2, 0x3D, 0xF5, 0xD4, 0x53, 0x4F, 0x3D, 0x85, 0x80, 0xC4, 0x0F, 0x0F, 0x73, 0xD9, 0x11, 0x45, 0x14, 0x51, 0x44, 0x11, 0x81, 0x13, 0xEC, 0x87, 0x87, 0xB9, 0x6C, 0x2F, 0xBC, 0xF0, 0xC2, 0x0B, 0x2F, 0xA0, 0x10, 0xF3, 0xC3, 0xC3, 0x5C, 0x76, 0x25, 0x95, 0x54, 0x52, 0x49, 0x25, 0xF0};
const uint8_t spBEEPS4[] PROGMEM = {0x05, 0xAF, 0x1F, 0x1E, 0xE6, 0xB2, 0x2B, 0xAE, 0xB8, 0xE2, 0x8A, 0x2B, 0x06, 0xA3, 0xF0, 0x0F, 0x0F, 0x73, 0xD9, 0x56, 0x59, 0x65, 0x95, 0x55, 0x56, 0x41, 0xE3, 0xE9, 0x87, 0x87, 0xB9, 0xEC, 0xCE, 0x3B, 0xEF, 0xBC, 0xF3, 0xCE, 0xC1, 0x70, 0xF2, 0xC3, 0xC3, 0x5C, 0xB6, 0xE5, 0x96, 0x5B, 0x6E, 0xB9, 0xE5, 0xF0};
// Some spelling prompts
const uint8_t spSPELL[] PROGMEM = {0x0E, 0xDC, 0x52, 0x1E, 0x41, 0x02, 0x6B, 0x64, 0x44, 0x80, 0x01, 0x02, 0xD1, 0xB8, 0x5B, 0x70, 0xAC, 0x8E, 0x16, 0x91, 0x6B, 0xF9, 0x78, 0x55, 0x22, 0xA6, 0xDB, 0xF2, 0x0D, 0x37, 0xDE, 0x7C, 0xCB, 0x2D, 0xA7, 0x39, 0x1D, 0x67, 0x1A, 0x77, 0x4E, 0x0B, 0xD2, 0x2F, 0xD9, 0x77, 0x9E, 0x9A, 0xA5, 0xEE, 0xA9, 0xF4, 0x3A, 0x29, 0xD0, 0xF8, 0x24, 0x5B, 0x7C, 0xFD, 0x31, 0x9E, 0xE6, 0x27, 0x59, 0xDD, 0xA6, 0xB4, 0xDC, 0x55, 0xEC, 0xB8, 0x49, 0x72, 0x3B, 0x11, 0xAA, 0xAA, 0xAD, 0x78};
const uint8_t spNOW_SPELL[] PROGMEM = {0x29, 0x68, 0xCE, 0xB5, 0x16, 0xB6, 0xBB, 0x3F, 0xC6, 0x68, 0x8F, 0x8C, 0x32, 0x72, 0x94, 0xF7, 0x1E, 0x5E, 0x63, 0xE6, 0x08, 0x57, 0xD2, 0xA2, 0xCA, 0xEA, 0x61, 0x3E, 0x56, 0x6A, 0x6C, 0xB8, 0x43, 0xBD, 0x9B, 0x12, 0xEF, 0xB2, 0x87, 0x58, 0x7B, 0xC5, 0x91, 0x71, 0x0E, 0x56, 0xF1, 0x42, 0xC2, 0x92, 0x6D, 0x34, 0x90, 0x36, 0x63, 0x5C, 0x19, 0x79, 0xA2, 0x04, 0x7E, 0x89, 0x08, 0xE0, 0x95, 0xCC, 0x08, 0x32, 0x08, 0x60, 0xDD, 0x0E, 0x40, 0xC0, 0x05, 0xF7, 0x45, 0x5D, 0x70, 0x77, 0x8B, 0xD9, 0x47, 0x3A, 0x63, 0x15, 0x39, 0x93, 0xAF, 0x3A, 0xDA, 0x39, 0x6F, 0xCD, 0x1D, 0x73, 0xF5, 0x35, 0xC7, 0x1A, 0x5B, 0xA5, 0x55, 0x93, 0xAF, 0x3D, 0xD6, 0xB8, 0x6A, 0xB5, 0xBA, 0x7D, 0xAC, 0x71, 0x35, 0xA2, 0x3D, 0xF7, 0xDA, 0x65, 0xB5, 0xAD, 0x15, 0xEA, 0x45, 0xD3, 0x4C, 0xD3, 0x4D, 0x35, 0xDE, 0x3C};
const uint8_t spNEXT_SPELL[] PROGMEM = {0x26, 0x4A, 0xCD, 0x1B, 0x96, 0x4E, 0x5C, 0xE4, 0x4A, 0xDE, 0x3D, 0x63, 0xA6, 0xC0, 0x95, 0x5C, 0xB9, 0x45, 0xA9, 0xFE, 0x58, 0x6B, 0xD5, 0x23, 0x2B, 0xD2, 0x55, 0x47, 0x44, 0xE3, 0xEE, 0xDD, 0xA5, 0x8F, 0x88, 0xC1, 0xAD, 0xAA, 0x43, 0x5F, 0xB1, 0x05, 0x03, 0xCE, 0xA9, 0x73, 0x80, 0x80, 0x53, 0x66, 0x01, 0x2C, 0xDB, 0x1B, 0xC0, 0xDF, 0x55, 0x05, 0x1C, 0x6F, 0x1E, 0x01, 0x18, 0xB0, 0x73, 0xA6, 0x03, 0x2B, 0x94, 0x79, 0x80, 0x40, 0xD3, 0xE9, 0x40, 0x01, 0x03, 0xC7, 0x78, 0x19, 0xF0, 0x6B, 0x85, 0x03, 0xE7, 0x75, 0x46, 0xE0, 0x81, 0x00, 0x63, 0xB4, 0x83, 0x02, 0xCD, 0x86, 0x9F, 0xA4, 0x52, 0x5A, 0x4D, 0x55, 0x3E, 0xC5, 0xF8, 0x88, 0xE8, 0x2D, 0x75, 0xAA, 0x55, 0x99, 0x95, 0x33, 0xF2, 0x74, 0x4F, 0xAB, 0x33, 0x3B, 0xC6, 0xED, 0xA7, 0x5B, 0x59, 0xCD, 0x3B, 0xA1, 0x4E, 0xD7, 0xA1, 0xC3, 0xFC, 0x13, 0x9C, 0x21, 0xD3, 0xB8, 0xC5, 0xC5, 0x5E, 0x43, 0xFB, 0x1A, 0xB2, 0xAB, 0x3D, 0xBA, 0x36, 0x75, 0xAC, 0x33, 0x65, 0x64, 0xE9, 0xB6, 0x58, 0x27, 0x76, 0x0B, 0x22, 0x4E, 0x63, 0xAC, 0xD5, 0x62, 0xB9, 0x5D, 0x53, 0xF3, 0x30, 0x51, 0x07, 0x6D, 0x70, 0xBB, 0xBA, 0x46, 0x7E};
const uint8_t spNOW_TRY[] PROGMEM = {0x29, 0x48, 0xC9, 0xD3, 0x61, 0x56, 0xAB, 0xEF, 0x6E, 0x9B, 0x63, 0x7C, 0x72, 0x8B, 0xEA, 0x28, 0xC7, 0xF8, 0x52, 0xE6, 0xD1, 0x51, 0x8F, 0x71, 0x79, 0xDC, 0xB2, 0xA2, 0x1E, 0x63, 0xC3, 0x94, 0x78, 0x55, 0xBD, 0xFA, 0x28, 0xED, 0x37, 0xC5, 0xA3, 0xC9, 0x15, 0x43, 0xA8, 0xD8, 0x29, 0xE9, 0x8D, 0x12, 0x57, 0x5B, 0xD4, 0x23, 0x9D, 0x22, 0x20, 0x5B, 0x08, 0x02, 0xC2, 0xB5, 0x1B, 0x10, 0x5A, 0x55, 0x00, 0xBD, 0x66, 0x24, 0x90, 0xF2, 0x54, 0x04, 0x11, 0x2C, 0xAD, 0xB6, 0x46, 0xA4, 0x66, 0x3F, 0x56, 0xAD, 0x08, 0x2B, 0x6F, 0x7B, 0x9C, 0xC9, 0x93, 0x52, 0x31, 0xFB, 0x78, 0x93, 0xBA, 0x24, 0xBA, 0xCC, 0xF5, 0xD7, 0x1F, 0x6F, 0x4B, 0xBA, 0x75, 0x86, 0xB9, 0xFE, 0xFA, 0x13, 0x6C, 0x76, 0x8F, 0xAA, 0xC8, 0x27, 0xB8, 0xE0, 0x56, 0x95, 0x91, 0x4F, 0x08, 0xD6, 0xB5, 0xBA, 0x22, 0x9F, 0x10, 0x8C, 0x69, 0x77, 0x85, 0x1E, 0xC1, 0x4A, 0x97, 0x0D, 0x17, 0x53, 0x43, 0x08, 0x4A, 0x9B, 0xB5, 0xBB, 0xE9, 0x07};
// And some responses
const uint8_t spTHAT_IS_CORRECT[] PROGMEM = {0x26, 0xA9, 0x20, 0x2E, 0x56, 0x4E, 0x5C, 0xE2, 0xCE, 0xDC, 0xA2, 0x2D, 0xFB, 0xB4, 0x9C, 0x31, 0xDA, 0x69, 0x13, 0xEA, 0x38, 0xED, 0xA3, 0x23, 0xD7, 0xD0, 0x09, 0x3A, 0x45, 0x56, 0x8D, 0x98, 0x13, 0x5C, 0xF0, 0x88, 0xBC, 0x32, 0x37, 0xB6, 0x98, 0xA4, 0xB9, 0xAA, 0xD7, 0x3A, 0x3E, 0x5A, 0x57, 0xD3, 0xBA, 0x7C, 0x5C, 0x10, 0x61, 0xA6, 0xF9, 0xF2, 0xDA, 0x6D, 0x03, 0x78, 0x89, 0x2C, 0x80, 0xB7, 0x33, 0x02, 0xD8, 0xA7, 0xCA, 0x81, 0x56, 0xFC, 0x09, 0x68, 0xD6, 0xCA, 0x00, 0xEF, 0xB7, 0x0D, 0x08, 0x66, 0x6A, 0x48, 0x39, 0x2D, 0x2D, 0xB9, 0xCB, 0xD6, 0xCD, 0x88, 0x2D, 0x51, 0xAE, 0x7A, 0x9B, 0x15, 0x87, 0xBD, 0x5C, 0xD5, 0x75, 0x77, 0xBC, 0xA9, 0x16, 0x36, 0xBE, 0xEA, 0x78, 0xD3, 0xA5, 0xAA, 0x3B, 0xF6, 0x09, 0x36, 0x5B, 0x4C, 0x4F, 0xE2, 0x11, 0x7D, 0x36, 0x9B, 0xEC, 0x45, 0x09, 0xC4, 0xEE, 0x8C, 0x01, 0x02, 0xD1, 0xBB, 0x02, 0x18, 0x50, 0x93, 0xA7, 0x01, 0x33, 0xE5, 0x1A, 0x50, 0x5D, 0xE5, 0x03};
const uint8_t spYOU_ARE_CORRECT[] PROGMEM = {0x21, 0x24, 0x88, 0x7D, 0xAD, 0x72, 0x5A, 0x88, 0x94, 0xAC, 0x26, 0x43, 0x0F, 0x13, 0x2C, 0xB3, 0x77, 0x2D, 0x5A, 0xC6, 0x06, 0xB0, 0xCC, 0x9C, 0xBD, 0xB4, 0x12, 0xEE, 0x9E, 0xFA, 0xB9, 0x69, 0xEE, 0xCB, 0xD4, 0xAD, 0x75, 0x13, 0xC2, 0x8F, 0xBB, 0x68, 0xE7, 0x23, 0x64, 0x1E, 0x37, 0xF3, 0x36, 0x47, 0x6A, 0xBB, 0xA5, 0x1E, 0x69, 0x8F, 0x34, 0x61, 0x4B, 0x3D, 0x1B, 0x1F, 0x65, 0xCA, 0x68, 0x86, 0xB5, 0xB9, 0x6A, 0x29, 0xD3, 0x53, 0x56, 0xAD, 0x75, 0x50, 0x7A, 0xA4, 0xA6, 0x7B, 0x2A, 0x04, 0xF4, 0x48, 0x45, 0x40, 0x97, 0x12, 0x01, 0x6C, 0xF9, 0x32, 0xC0, 0xEC, 0x75, 0x03, 0x5C, 0xEC, 0x48, 0x94, 0x2F, 0x49, 0x0B, 0xCB, 0x58, 0x69, 0x65, 0x89, 0xB1, 0xA3, 0x16, 0xA1, 0x6A, 0x03, 0x13, 0x8B, 0xA2, 0xC2, 0xB4, 0x55, 0xB2, 0x88, 0x2A, 0x1E, 0x99, 0x11, 0xFB, 0x50, 0x13, 0xD3, 0x2E, 0x53, 0xF2, 0x56, 0x37, 0x8E, 0x68, 0x92, 0x45, 0x67, 0x8A, 0x46, 0xC0, 0x24, 0x0B, 0x04, 0x8C, 0xC9, 0x00, 0x00, 0x00, 0x05, 0x4A, 0x89, 0x11, 0xA0, 0xFA, 0x5D, 0x02, 0x52, 0xDC, 0x7A};
const uint8_t spTHAT_IS_RIGHT[] PROGMEM = {0x29, 0x5B, 0x6B, 0xA6, 0x94, 0x49, 0x72, 0x3E, 0xD6, 0x78, 0x73, 0xF7, 0x8D, 0x7C, 0xAC, 0x4E, 0x56, 0x3E, 0x6B, 0xF9, 0x58, 0xEF, 0x32, 0x32, 0x66, 0xCC, 0xB1, 0xD1, 0xA7, 0x87, 0x4F, 0x99, 0x6B, 0xAE, 0x71, 0xC6, 0x38, 0x53, 0x8F, 0x94, 0x12, 0x40, 0xCF, 0x99, 0xC3, 0x78, 0x61, 0x16, 0x99, 0x13, 0x97, 0xAD, 0x38, 0x54, 0x2D, 0x37, 0x6C, 0xD7, 0x9D, 0x03, 0xBB, 0x8A, 0x05, 0x30, 0x57, 0x7A, 0x4B, 0xD9, 0x9B, 0x9B, 0x8A, 0xFB, 0x92, 0x9C, 0x36, 0x0F, 0x53, 0x25, 0x21, 0x19, 0xE5, 0x69, 0xEA, 0x56, 0x66, 0x3A, 0x59, 0xB7, 0x28, 0x0B, 0x6D, 0x7D, 0xCB, 0xAA, 0xC1, 0x56, 0x99, 0x7B, 0xE5, 0x5B, 0x57, 0x8D, 0x31, 0x35, 0xA2, 0x9B, 0xB4, 0x9A, 0x7D, 0x90, 0x5D, 0xD5, 0x49, 0x35, 0x79, 0xA6, 0xDA, 0x09, 0x83, 0x80, 0x37, 0x6A, 0x00, 0x06, 0xF4, 0x94, 0xA5, 0xC0, 0x2B, 0x71, 0x0C, 0x2C, 0xDF, 0xF5};
const uint8_t spYOU_ARE_RIGHT[] PROGMEM = {0x2D, 0x7B, 0x4E, 0x5E, 0x5D, 0x96, 0x6A, 0x6E, 0xD9, 0x27, 0x52, 0x8F, 0x58, 0x3C, 0x73, 0xCB, 0x32, 0xB8, 0x96, 0x56, 0xCB, 0x96, 0x95, 0x2A, 0x0F, 0x95, 0x3C, 0x2B, 0x4B, 0xD7, 0x11, 0x26, 0xB9, 0x4E, 0x50, 0xA5, 0xA3, 0x54, 0x37, 0xDF, 0x70, 0xAC, 0x6A, 0xE5, 0x6D, 0xDE, 0xF6, 0x18, 0x75, 0x2D, 0xC2, 0xC3, 0xDB, 0x32, 0xEA, 0x8A, 0xA7, 0xBB, 0xB3, 0x60, 0xF8, 0x11, 0xAD, 0x14, 0x3B, 0x41, 0xA9, 0xA7, 0xDA, 0x69, 0xF6, 0xA7, 0x38, 0x4C, 0xCF, 0x48, 0x0F, 0x6F, 0x73, 0xA8, 0xA9, 0xE5, 0xEE, 0x65, 0xE7, 0x50, 0x9B, 0xD3, 0xCA, 0x9B, 0xF6, 0xA1, 0xB6, 0x48, 0x56, 0xA5, 0xEC, 0x85, 0x83, 0x57, 0xDD, 0x6C, 0x2B, 0x83, 0xB4, 0x90, 0xE8, 0x55, 0x95, 0x33, 0x61, 0xDC, 0x6B, 0xD5, 0x33, 0x4B, 0x0C, 0x1C, 0x28, 0x70, 0x72, 0x0E, 0x07, 0x0F};
const uint8_t spTHAT_IS_INCORRECT[] PROGMEM = {0x2A, 0x58, 0x65, 0xAE, 0xE6, 0xB7, 0x63, 0x38, 0x41, 0x17, 0x8D, 0x9C, 0x15, 0x7B, 0x82, 0xF3, 0x1E, 0x5E, 0x57, 0xF5, 0x78, 0x6F, 0xDC, 0xA3, 0x76, 0xEC, 0xB5, 0xD6, 0xC0, 0x31, 0xD1, 0x89, 0x99, 0xCD, 0x95, 0x63, 0xA3, 0x56, 0x73, 0xCD, 0x5B, 0xD7, 0x5D, 0x3F, 0x7C, 0x44, 0x61, 0x6E, 0xD5, 0xC2, 0x80, 0x2D, 0xD8, 0x0C, 0xF8, 0xC9, 0xAD, 0x85, 0xC8, 0x4D, 0x2A, 0xFB, 0x72, 0x0D, 0x2B, 0x44, 0x2D, 0xD6, 0x39, 0xA5, 0xAE, 0x3C, 0x22, 0x1A, 0xF1, 0x8C, 0x2D, 0xB4, 0xF9, 0x64, 0x83, 0x05, 0x4D, 0xAD, 0x9E, 0x89, 0x27, 0xAB, 0xDC, 0x71, 0xA9, 0x3D, 0x42, 0xD3, 0x96, 0x00, 0x4E, 0xBE, 0x6B, 0x90, 0xB8, 0x0C, 0xA5, 0x2A, 0x99, 0xA8, 0x70, 0xBE, 0x92, 0x6D, 0x23, 0x72, 0xE2, 0xEC, 0x05, 0x47, 0x5B, 0x92, 0x24, 0xE9, 0xD3, 0x28, 0xF5, 0xCC, 0x45, 0x8B, 0xC3, 0xD1, 0x66, 0x79, 0x97, 0x33, 0x87, 0x22, 0x53, 0xBD, 0x9D, 0x68, 0xBA, 0xA4, 0x57, 0xB5, 0x3A, 0xD5, 0x56, 0xF3, 0xE9, 0xAA, 0x7D, 0xAA, 0x2F, 0x66, 0x55, 0x5D, 0x67, 0xD5, 0x30, 0xD4, 0x3A, 0xAA, 0x0E, 0x00, 0x00, 0x80, 0x05, 0x06, 0x94, 0x38, 0x25, 0xC1, 0x03};
const uint8_t spTRY_AGAIN[] PROGMEM = {0x40, 0x6F, 0x15, 0x01, 0xB4, 0x98, 0x35, 0x90, 0xF2, 0xE1, 0xE6, 0xA1, 0xF4, 0x20, 0xB5, 0x3C, 0x3D, 0xA5, 0xCD, 0xC1, 0xBA, 0xD4, 0x68, 0x4A, 0x97, 0x83, 0x75, 0xAA, 0xE6, 0x8A, 0x26, 0x87, 0x98, 0x92, 0x61, 0x95, 0xB1, 0x0F, 0xB1, 0xD9, 0xA2, 0x23, 0x62, 0x1F, 0xE2, 0x83, 0xD9, 0x66, 0x58, 0x39, 0xD4, 0x3B, 0xD3, 0xCB, 0x92, 0xBC, 0x98, 0x8B, 0xE2, 0x13, 0x1D, 0xEB, 0xF2, 0x28, 0xB5, 0x16, 0x9E, 0x39, 0x9D, 0x73, 0x95, 0x6C, 0x3C, 0xB7, 0xD6, 0x5B, 0x26, 0x6B, 0x79, 0x23, 0x23, 0xBA, 0xC3, 0xCA, 0xF5, 0x27, 0x3A, 0x1F, 0xBA, 0xE3, 0xB6, 0x6E, 0x3E, 0xCD, 0x67, 0xB7, 0xCE, 0xA5, 0x7D, 0xD7, 0x5E, 0x6B, 0xB9, 0x6C, 0xAE, 0x95, 0xB2, 0xF3, 0xF2, 0x2B, 0xAD, 0xEC, 0x4D, 0x0D, 0xCB, 0x7D, 0x5C, 0x0F};
const uint8_t spWRONG[] PROGMEM = {0x41, 0xF0, 0x94, 0x2E, 0x67, 0xD2, 0x9B, 0xD0, 0xB3, 0x42, 0x4A, 0x9C, 0x6D, 0x74, 0xD1, 0x41, 0x6A, 0x74, 0x88, 0x5B, 0xDB, 0x45, 0xE4, 0xE8, 0xE4, 0x74, 0x27, 0x8B, 0xAB, 0x31, 0xC9, 0xE1, 0x8D, 0xA7, 0xD9, 0xF1, 0x14, 0xA7, 0xAF, 0x44, 0xDD, 0xC9, 0xED, 0xBD, 0xF7, 0x9E, 0xA6, 0x35, 0x92, 0xAE, 0x15, 0x25, 0x4E, 0x3F, 0xCB, 0x8C, 0xB1, 0x55, 0xDD, 0x6D, 0x09, 0x10, 0x63, 0x2B, 0x06, 0x0F};
const uint8_t spTHE_CORRECT_SPELLING_OF[] PROGMEM = {0x2E, 0x28, 0xAB, 0xAE, 0x6E, 0xAD, 0x52, 0xD0, 0xCE, 0x5D, 0x23, 0x57, 0x6D, 0x7D, 0x94, 0x2E, 0x21, 0x51, 0xD1, 0xF2, 0xAA, 0xAA, 0x08, 0x50, 0x29, 0x14, 0x01, 0xD7, 0x26, 0x2D, 0x08, 0x20, 0xBA, 0x9E, 0x21, 0xA2, 0xEB, 0x51, 0xD3, 0xA4, 0x43, 0xC8, 0xC5, 0x51, 0x11, 0x5E, 0x86, 0x10, 0x8B, 0x33, 0x5B, 0xD5, 0x55, 0xD1, 0x84, 0x3C, 0xA2, 0xD1, 0x62, 0xBF, 0x8B, 0xC3, 0x5D, 0x4E, 0xCB, 0x8C, 0xD9, 0x87, 0xB9, 0x62, 0xD6, 0xD1, 0xB1, 0x17, 0xF5, 0x4D, 0x74, 0xBD, 0x2C, 0x2B, 0x60, 0xBD, 0x3B, 0x02, 0x26, 0x69, 0x20, 0x50, 0x43, 0x8D, 0x05, 0x0E, 0xBC, 0x9A, 0x9D, 0xC0, 0x6E, 0x19, 0x19, 0x64, 0x10, 0x01, 0xC0, 0xD1, 0x36, 0x84, 0x69, 0x65, 0xE3, 0x63, 0x4C, 0xCC, 0xD2, 0xEC, 0xC9, 0xD7, 0x5D, 0x7F, 0x82, 0x09, 0x39, 0x62, 0x75, 0x75, 0xC6, 0x15, 0x5D, 0x08, 0xD7, 0x9C, 0xAA, 0x37, 0x9D, 0x1C, 0xBC, 0x59, 0xE4, 0x46, 0x3E, 0x39, 0x79, 0xD5, 0xE8, 0x0E, 0xB5, 0x72, 0x72, 0xA2, 0xD5, 0x69, 0x78, 0x96, 0x52, 0x82, 0x83, 0xD6, 0x76, 0x57, 0xA3, 0x78, 0xC7, 0xE9, 0xD4, 0x49, 0x4F, 0x0D, 0xB6, 0x5C, 0xAB, 0x6A, 0x9D, 0xEA, 0x5D, 0x85, 0x79, 0xCD, 0x3C, 0xCD, 0xA4, 0x1C, 0xC9, 0x8D, 0xB4, 0xBA, 0x6E, 0x95, 0xE6, 0x6F, 0x6B, 0x74, 0x15, 0xBB, 0x54, 0x7B, 0xF6, 0xEC, 0xBB, 0xAF, 0x66, 0x55, 0x56, 0x90, 0x6C, 0xD8, 0xB9, 0x87, 0x1A, 0xA2, 0x4F, 0x3E, 0x2B, 0x37, 0x67, 0x95, 0x1B, 0xFD, 0x03};
const uint8_t spIS[] PROGMEM = {0x2B, 0x26, 0xC9, 0x5A, 0x35, 0x55, 0x6E, 0x38, 0x21, 0x2A, 0xD5, 0xC8, 0xBE, 0x78, 0xC3, 0x0D, 0x37, 0xEC, 0xB8, 0xE3, 0x88, 0x41, 0xB1, 0x95, 0xD4, 0xC3, 0x11, 0x83, 0x14, 0x0B, 0x8D, 0x97, 0x2D, 0x46, 0x29, 0x9A, 0x6A, 0x3F, 0x47, 0x2C, 0xCC, 0xD4, 0x45, 0x7B, 0xB5, 0x38, 0xA4, 0xA9, 0x29, 0xE7, 0xE9, 0x51, 0x81, 0xDF, 0xC2, 0x2C, 0xD0, 0x40, 0x81, 0x97, 0xA2, 0x2D, 0x78};
// Other responses from some of the Speak & Spell games
const uint8_t spI_WIN[] PROGMEM = {0x47, 0x3A, 0xDB, 0x63, 0x36, 0x51, 0xAF, 0x3C, 0xC2, 0xC5, 0x4A, 0x8B, 0x09, 0x73, 0xC5, 0x11, 0x3E, 0xB9, 0x47, 0x75, 0xEC, 0x23, 0x62, 0x34, 0x8D, 0xEC, 0x48, 0x47, 0x04, 0xE7, 0x9C, 0x5D, 0x35, 0x97, 0xD2, 0x26, 0x35, 0x33, 0x2E, 0x17, 0xC3, 0xBD, 0x4F, 0x48, 0x38, 0xCE, 0x2E, 0xBB, 0xE9, 0x57, 0x30, 0x31, 0xD4, 0x23, 0x66, 0x9E, 0xEC, 0xA3, 0x49, 0x55, 0xC5, 0x3C, 0x3D, 0x7A, 0x53, 0xCB, 0xAE, 0x7C, 0xBA, 0xE5, 0x11, 0xB5, 0x29, 0x6A, 0xF7, 0xDE, 0x63, 0x0B, 0xD3, 0x31, 0x8E, 0xB4, 0x76, 0x94, 0x77, 0x3D, 0xFE, 0x3C};
const uint8_t spYOU_WIN[] PROGMEM = {0x4D, 0xE6, 0xC8, 0xC2, 0x91, 0x8F, 0xBB, 0x9C, 0x72, 0x89, 0x98, 0x84, 0x35, 0x7D, 0xD5, 0x12, 0xD6, 0x98, 0x5A, 0xFA, 0xE2, 0xC1, 0x94, 0x71, 0x0F, 0xB7, 0xD9, 0x8D, 0x09, 0x9F, 0x61, 0x66, 0xB7, 0x13, 0xE3, 0xD3, 0x4D, 0xBC, 0x1F, 0x05, 0x46, 0x9E, 0xAB, 0x65, 0xAD, 0x0E, 0x86, 0x5E, 0x53, 0xF5, 0x2A, 0xEB, 0xBD, 0xCB, 0xF4, 0xB8, 0x9B, 0x96, 0x14, 0x9F, 0x4B, 0x52, 0x2D, 0xC4, 0xB5, 0x2B, 0xCF, 0x74, 0x8A, 0x8B, 0x62, 0x11, 0x1D, 0xEB, 0xD4, 0xE4, 0xCC, 0x34, 0x6B, 0xD2, 0x69, 0xC5, 0x85, 0x9B, 0xD6, 0xA5, 0x3B, 0xCF, 0x8E, 0xBE, 0x4C, 0xE5, 0xA6, 0xCE, 0x9B, 0x6F, 0x78, 0xC9, 0x6B, 0x08, 0x94, 0xFB, 0xFE, 0xF2, 0x2B, 0xCF, 0xD9, 0x54, 0xF7, 0xB4, 0xF4};
const uint8_t spPERFECT_SCORE[] PROGMEM = {0x0E, 0xD4, 0x90, 0xA1, 0x40, 0x8C, 0x15, 0x8D, 0xCB, 0xE0, 0xD2, 0xC5, 0x71, 0x16, 0x53, 0x83, 0x33, 0x4B, 0x93, 0x5E, 0x72, 0x49, 0x25, 0x0A, 0x14, 0xE9, 0x2E, 0xC1, 0x20, 0x31, 0x29, 0x65, 0xE6, 0xEC, 0x4B, 0x36, 0xB5, 0x14, 0x01, 0x23, 0xCD, 0x31, 0xC0, 0xC0, 0x80, 0x52, 0xB2, 0x10, 0x48, 0xAD, 0xCC, 0x80, 0x53, 0x72, 0x1C, 0xB8, 0xA7, 0xCA, 0x83, 0x08, 0x24, 0x80, 0x66, 0x6D, 0x48, 0xD5, 0xF0, 0xC4, 0xCB, 0xCA, 0x9C, 0x1E, 0xE2, 0x9B, 0x96, 0x13, 0xB9, 0xC3, 0xD4, 0x5B, 0x8F, 0xC8, 0xFB, 0xAA, 0x4B, 0x35, 0xE9, 0xB9, 0xB7, 0x36, 0x64, 0xE8, 0x0A, 0xD5, 0x5C, 0x71, 0x94, 0xA1, 0x7A, 0x86, 0x86, 0xFE, 0x6A, 0x53, 0xD5, 0xF0, 0x36, 0xEF, 0xD9, 0x96, 0xA9, 0xA1, 0xED, 0xDA, 0x3B, 0x2C, 0x9B, 0x8B, 0x23, 0x25, 0xA7, 0x59, 0x66, 0xA8, 0x4D, 0xEA, 0xC2, 0x07};
const uint8_t spHERE_IS_YOUR_SCORE[] PROGMEM = {0x0C, 0x58, 0xAC, 0xA5, 0xC1, 0x60, 0x8A, 0xEB, 0x4C, 0x86, 0xD4, 0x43, 0xA3, 0x61, 0xB3, 0xE9, 0xD9, 0x87, 0x38, 0x67, 0x6A, 0x1D, 0x6D, 0x2E, 0x3E, 0xC8, 0x06, 0x57, 0x5D, 0x6B, 0xB2, 0x90, 0x8E, 0x66, 0xFA, 0x92, 0x76, 0x60, 0x33, 0xC4, 0x6C, 0x25, 0xED, 0x22, 0x6E, 0xAB, 0x73, 0x4A, 0xBE, 0x43, 0x43, 0xB4, 0xA0, 0x88, 0xA6, 0x87, 0x25, 0xEB, 0x26, 0x91, 0x8B, 0x0F, 0xCF, 0xC6, 0xD4, 0x2C, 0x6F, 0x5D, 0x31, 0x44, 0xC4, 0xEA, 0xD9, 0x59, 0x73, 0x88, 0x55, 0x5C, 0xD0, 0xCA, 0x5B, 0x02, 0x73, 0xB5, 0x27, 0x30, 0xFA, 0xB8, 0x07, 0x43, 0x6B, 0xEF, 0x1A, 0x6D, 0x6D, 0x9B, 0x91, 0xC3, 0x35, 0x43, 0xBA, 0x2C, 0xA3, 0x63, 0x9A, 0x37, 0xA7, 0xD9, 0xB6, 0xBB, 0xE6, 0x9C, 0x74, 0x77, 0xCB, 0x58, 0x01, 0x8C, 0x51, 0x11, 0xC0, 0x79, 0x15, 0x09, 0xCC, 0xD7, 0x19, 0x01, 0x06, 0x02, 0x04, 0x37, 0xD3, 0xBC, 0x96, 0x15, 0x16, 0xEA, 0xB7, 0x45, 0xBE, 0xDD, 0x5D, 0xAA, 0x51, 0x2B, 0x7C, 0x66, 0x98, 0x66, 0xA7, 0xD6, 0x95, 0xEE, 0x09, 0x55, 0x7F, 0x6D, 0x88, 0x3C, 0x69, 0x66, 0x79, 0xEA, 0xE8, 0xA3, 0x4D, 0xDD, 0x4A, 0xCB, 0xAC, 0x6F, 0x5A, 0xBA, 0xB9, 0x4E, 0xDB, 0x5E, 0xBF, 0xF4, 0x42, 0x20, 0x8C, 0x56, 0x04, 0x5C, 0x33, 0xC5, 0xE0, 0x01};
// A subset of the original spellable word lists,
// picked just a few to make faux edgy EDM vocals:
const uint8_t spBLOOD[] PROGMEM = {0x26, 0x53, 0x96, 0x55, 0x6E, 0x69, 0x62, 0xB6, 0xD9, 0x80, 0xCC, 0xD5, 0x46, 0xD4, 0x32, 0x56, 0xD9, 0x17, 0x36, 0xAD, 0xA5, 0x3F, 0x93, 0xB7, 0x19, 0x5A, 0xEA, 0x7C, 0xD4, 0xB4, 0xB3, 0xD5, 0x51, 0xCA, 0xD4, 0xB3, 0x66, 0xDC, 0xAB, 0x8E, 0x52, 0xAD, 0x43, 0x72, 0x6A, 0x5F, 0x7B, 0xFD, 0x49, 0xBA, 0x85, 0xF6, 0xAC, 0x99, 0x5B, 0x56, 0xD3, 0xD5, 0xAD, 0xFB, 0xC5, 0xB6, 0xEE, 0x54, 0x71, 0xF6, 0x16, 0x35, 0x5D, 0x8A, 0x70, 0x97, 0x0D, 0xAA, 0x3A, 0xE5, 0xAD, 0x59, 0x69, 0x56, 0x2F, 0xB7, 0xAA, 0x73, 0x0F, 0x35, 0x59, 0x7D, 0x95, 0xE5, 0xB5, 0xB8, 0xDB, 0xCB, 0x89, 0xF9, 0x01};
const uint8_t spDANGER[] PROGMEM = {0x2C, 0x43, 0x5B, 0x95, 0x15, 0x94, 0x78, 0x2E, 0xA0, 0xC8, 0xD0, 0x63, 0x1C, 0xD7, 0xCA, 0xCE, 0x88, 0x47, 0x39, 0x65, 0x9E, 0x9B, 0xA6, 0x8F, 0x2A, 0x56, 0xC4, 0xB7, 0x42, 0x5D, 0x79, 0x64, 0x71, 0xCC, 0xF9, 0x6E, 0xF5, 0x28, 0x2B, 0xA9, 0xDA, 0xAD, 0xEE, 0x56, 0xC3, 0x38, 0x05, 0x6B, 0x6D, 0x8E, 0x9B, 0x13, 0x4A, 0x4E, 0x33, 0x6C, 0x57, 0x9F, 0xC3, 0x08, 0xC9, 0x92, 0x85, 0xBB, 0x93, 0x13, 0xDA, 0xE8, 0x10, 0x76, 0x29, 0x05, 0x94, 0xE4, 0xBA, 0xB2, 0x15, 0x6E, 0x36, 0x59, 0x7B, 0x64, 0x53, 0x58, 0x36, 0x62, 0xF1, 0x2A, 0x26, 0x1B, 0xD7, 0x78, 0xE6, 0xD1, 0x6C, 0x49, 0x98, 0xB6, 0x0E, 0x7D, 0xF6, 0xB3, 0x9E, 0xD7, 0x2D, 0xF2, 0xA1, 0x79, 0xBE, 0xFC, 0x1E};
const uint8_t spEARTH[] PROGMEM = {0x4A, 0x99, 0xA3, 0x92, 0x69, 0x6E, 0xB7, 0xBA, 0xEA, 0xAA, 0xA3, 0xCC, 0x63, 0xAD, 0x90, 0xB4, 0x57, 0x5F, 0x73, 0x82, 0xDD, 0x2C, 0x93, 0xBA, 0x66, 0x96, 0x56, 0xEC, 0x64, 0xCD, 0xF2, 0xCD, 0xAD, 0x38, 0x66, 0xA9, 0x95, 0xB5, 0x14, 0x70, 0x26, 0x94, 0x01, 0xCF, 0xDD, 0x24, 0x30, 0xA0, 0xBA, 0x0C, 0x01, 0x86, 0xAF, 0x90, 0x80, 0x03, 0x0C, 0x1E};
const uint8_t spECHO[] PROGMEM = {0x4B, 0xB9, 0xC4, 0xB5, 0x39, 0x72, 0xAE, 0xBA, 0xF2, 0xCA, 0x26, 0x5D, 0x62, 0x9F, 0x74, 0x49, 0x04, 0xE8, 0x60, 0x85, 0x80, 0x09, 0x5E, 0x60, 0x80, 0xAB, 0x29, 0xC7, 0x6A, 0x1F, 0x9E, 0x11, 0x8B, 0x8E, 0xD7, 0xD9, 0x4B, 0xAD, 0x1E, 0x9F, 0xA8, 0x4B, 0xA4, 0x49, 0x3D, 0x3E, 0x49, 0xD6, 0x8A, 0x90, 0x5D, 0x72, 0xD3, 0x4E, 0xAD, 0x8B, 0x3C, 0x61, 0xD6, 0x2D, 0xD6, 0x74, 0x22, 0x7B, 0x84, 0xFD, 0x94, 0xA9, 0x4C, 0x75, 0x92, 0xEC, 0xCC, 0x53, 0x8F, 0x07};
const uint8_t spEVERYONE[] PROGMEM = {0xC3, 0x44, 0x17, 0x6A, 0x9B, 0x35, 0xAF, 0xB9, 0xE6, 0x68, 0x13, 0x34, 0xBA, 0xBB, 0xD2, 0xD1, 0xC6, 0xBB, 0x65, 0xFB, 0xC2, 0x63, 0x4C, 0x0A, 0xB3, 0xD4, 0x45, 0xCD, 0x9B, 0xE8, 0xE6, 0xC6, 0x6E, 0x6B, 0x2C, 0x51, 0x97, 0x54, 0x37, 0xB3, 0x35, 0x43, 0xF3, 0xF2, 0x92, 0x57, 0xA8, 0xD6, 0xE5, 0xF5, 0x21, 0x2F, 0x37, 0x2F, 0x27, 0xB8, 0x26, 0x2E, 0x65, 0x59, 0x4F, 0x88, 0xD9, 0x55, 0xD2, 0x7A, 0xDF, 0x78, 0x52, 0xD0, 0xAE, 0x91, 0xEA, 0xA7, 0x25, 0x69, 0x32, 0x5A, 0xD9, 0x77, 0x49, 0x22, 0x76, 0x24, 0xBB, 0xC2, 0x9A, 0x5B, 0x16, 0xBE, 0xC7, 0xD1, 0x7C, 0xAD, 0x2C, 0x5A, 0xAF, 0x48, 0xA6, 0x3E, 0x59, 0xF6, 0x69, 0xF1, 0xCA, 0x72, 0x8A, 0x1C, 0xE7, 0x1E, 0x95, 0xFA, 0x96, 0x53, 0x4D, 0x98, 0xD0, 0xCE, 0xC5, 0xB7, 0x9D, 0xE9, 0x4D, 0xBB, 0x76, 0x35, 0x3E, 0x2B, 0xA9, 0x36, 0x35, 0x9B, 0xDD, 0x56, 0x56, 0x66, 0x01, 0xD1, 0xAC, 0xAC, 0x68, 0xC5, 0x85, 0x3B, 0x4F, 0x59, 0x59, 0x9A, 0x38, 0x47, 0xFA, 0x79, 0xEB, 0x7D};
const uint8_t spEXTRA[] PROGMEM = {0x47, 0x07, 0x63, 0x59, 0x3D, 0x96, 0xAF, 0x3E, 0x3A, 0x64, 0xF6, 0x99, 0x08, 0xD5, 0xB5, 0xD6, 0x08, 0x38, 0xE1, 0x8E, 0x41, 0x02, 0x31, 0x4F, 0x24, 0xF0, 0x56, 0x56, 0x02, 0x67, 0x8F, 0x67, 0xA0, 0x01, 0x02, 0x3D, 0x76, 0x06, 0x90, 0xF2, 0x54, 0x04, 0x23, 0xC8, 0x21, 0xEE, 0x59, 0x4E, 0x47, 0x52, 0x9B, 0x2A, 0x22, 0x1B, 0x9D, 0xA2, 0xA6, 0x66, 0x64, 0xB5, 0x3C, 0x43, 0xCD, 0xB0, 0xEA, 0x9A, 0xBD, 0xA6, 0x5A, 0xEE, 0xD1, 0x3B, 0xF6, 0x1C, 0xD3, 0x33, 0xCD, 0xCF, 0xC9, 0x7D, 0xFB, 0xF9, 0xF7};
const uint8_t spHEAVY[] PROGMEM = {0x02, 0xE4, 0x60, 0xE9, 0xC1, 0x90, 0xDE, 0xAA, 0x55, 0xA6, 0xC8, 0x23, 0x6D, 0xD2, 0xC8, 0xE9, 0x2A, 0x57, 0x5C, 0x71, 0xD5, 0xB0, 0xCE, 0x9B, 0x99, 0x72, 0xE3, 0x9E, 0x46, 0x8A, 0xD1, 0xCC, 0x5C, 0x13, 0x9F, 0x14, 0x8B, 0x99, 0x44, 0xDC, 0x39, 0xA5, 0x64, 0x17, 0xF1, 0x5A, 0x75, 0x5A, 0xCF, 0x25, 0x64, 0xB5, 0xFA, 0x8E, 0xB1, 0x92, 0x13, 0xCA, 0xDD, 0x5A, 0x75, 0xB5, 0x55, 0xA3, 0x11, 0x77, 0x2F, 0x09, 0x2B, 0x07, 0x85, 0xFA, 0x9E, 0x18, 0xD7, 0x03};
const uint8_t spLEATHER[] PROGMEM = {0xC6, 0x71, 0x3B, 0xC1, 0xD1, 0x51, 0xA2, 0xAB, 0xA1, 0x87, 0xE9, 0x86, 0x95, 0xBA, 0x1A, 0xE3, 0xE2, 0x4C, 0x7D, 0xA4, 0xE5, 0x3E, 0x14, 0xD9, 0xF8, 0x08, 0x93, 0xC2, 0x7D, 0xBA, 0xF2, 0x15, 0x57, 0x1E, 0xA9, 0xB3, 0x97, 0xCE, 0x9A, 0x19, 0x5A, 0x75, 0x35, 0xEF, 0xB2, 0xBC, 0xBC, 0xB1, 0xA9, 0x6A, 0x9D, 0xD0, 0x01, 0x63, 0x53, 0x97, 0x97, 0x26, 0xC3, 0xB3, 0x22, 0xAC, 0xA8, 0x4C, 0xA5, 0xAD, 0xDB, 0x5C, 0x45, 0x0D, 0x8E, 0xF7, 0x74, 0x34, 0x9A, 0x1E, 0x6C, 0x5F, 0xDE, 0x70, 0x2C, 0xD3, 0x82, 0x36, 0x23, 0xF3, 0x7C, 0xED, 0x99, 0x92, 0x34, 0x6B, 0x99, 0xFA, 0x8D, 0xF7, 0x01};
const uint8_t spMACHINE[] PROGMEM = {0xC9, 0x0B, 0xC3, 0xED, 0x56, 0x4E, 0x87, 0x57, 0xD6, 0x23, 0xC5, 0x6B, 0x6F, 0xB7, 0xDD, 0x75, 0xC7, 0xE9, 0x90, 0x6E, 0x55, 0x0D, 0x8F, 0x33, 0x31, 0xB4, 0xAA, 0x2A, 0x1E, 0x6F, 0x8D, 0x9B, 0x4D, 0x24, 0x58, 0x3E, 0x68, 0x55, 0xF5, 0x4C, 0xD9, 0x40, 0xAD, 0x3D, 0x05, 0x94, 0xBE, 0x57, 0x41, 0x07, 0x1D, 0x74, 0x70, 0x78, 0x2A, 0x2A, 0xE2, 0xB5, 0xFA, 0xF0, 0xE4, 0x58, 0xFC, 0xB3, 0xF4, 0xE1, 0xD9, 0x93, 0xE4, 0x65, 0xE0, 0x23, 0xB2, 0x07, 0xDF, 0x31, 0x69, 0x57, 0x5F, 0xBB, 0xC3, 0x48, 0xC5, 0x0B, 0xF6, 0x9A, 0xD5, 0x99, 0x5B, 0x2D, 0x99, 0xB0, 0x37, 0xAC, 0xE5, 0xEE, 0x47, 0x1A, 0x41, 0xB2, 0xAD, 0x54, 0xD4, 0xB2, 0x82, 0x11, 0x0F, 0x9E, 0xA4, 0x75, 0xD5, 0x55, 0x57, 0xDD, 0x0F};
const uint8_t spMONEY[] PROGMEM = {0x2C, 0x52, 0x6D, 0x67, 0x9A, 0xB5, 0x75, 0xB4, 0xD1, 0x87, 0x18, 0xA3, 0x2B, 0x5A, 0x8D, 0x70, 0xED, 0xAA, 0x55, 0xF5, 0x96, 0x57, 0x1E, 0x69, 0x62, 0x86, 0x76, 0x47, 0xB9, 0xF2, 0x28, 0x93, 0xDC, 0x34, 0x3B, 0x72, 0x73, 0x5A, 0xF3, 0x48, 0xA5, 0xA3, 0x13, 0x7D, 0x50, 0xB7, 0x5C, 0x2B, 0x27, 0xE7, 0x64, 0x66, 0x3E, 0x45, 0x4E, 0xEE, 0x29, 0x45, 0x3D, 0x67, 0x9E, 0x32, 0x53, 0x31, 0x47, 0xD5, 0x5C, 0xB5, 0x07, 0x47, 0xD9, 0x08, 0x3B, 0x47, 0xDF, 0x75, 0xFB, 0xFD};
const uint8_t spMOSQUITO[] PROGMEM = {0x2E, 0x2A, 0x29, 0x99, 0x6A, 0x75, 0x73, 0x28, 0xDE, 0x48, 0x8E, 0x32, 0x8B, 0xB7, 0xBC, 0xB5, 0x59, 0xAA, 0xB6, 0xF2, 0xFA, 0x19, 0x14, 0x18, 0x54, 0x54, 0x02, 0x01, 0x86, 0xCE, 0xD0, 0xC0, 0x02, 0x07, 0xA2, 0x0E, 0x07, 0x70, 0x20, 0x50, 0xF6, 0xA4, 0x02, 0x65, 0xAF, 0x2F, 0xD1, 0x55, 0x54, 0x91, 0x65, 0x55, 0x35, 0xA4, 0xD0, 0x4B, 0x89, 0x38, 0xBA, 0x4E, 0x41, 0x9A, 0x8A, 0xCC, 0xA8, 0x90, 0xE3, 0x4C, 0xAB, 0xA8, 0x90, 0xEE, 0x99, 0x8D, 0x66, 0x9D, 0xB5, 0x35, 0x63, 0xA3, 0x52, 0xB5, 0x4F, 0x1D, 0x75, 0x95, 0xE5, 0x78, 0x4E, 0x98, 0xE8, 0x8B, 0x25, 0x76, 0xD3, 0xA2, 0x0E, 0x0F, 0x73, 0xD9, 0x0F};
const uint8_t spPLEASURE[] PROGMEM = {0x06, 0xCC, 0x12, 0xE9, 0xC0, 0xCA, 0x11, 0x06, 0x4C, 0xAF, 0xA5, 0x40, 0xE3, 0x52, 0x49, 0xD2, 0x97, 0xAA, 0xD1, 0x4A, 0x87, 0x34, 0x52, 0x2F, 0xA0, 0xEA, 0x4C, 0xD1, 0xC5, 0x11, 0xDA, 0x67, 0x49, 0x75, 0xED, 0x23, 0xAC, 0xCB, 0xD0, 0xEE, 0xCA, 0x47, 0x38, 0xEF, 0x61, 0x39, 0xA3, 0x8F, 0x08, 0xCA, 0xDD, 0xB3, 0x26, 0x1F, 0xE5, 0xA4, 0xB9, 0x6F, 0xD6, 0x3A, 0xD6, 0x2B, 0xB1, 0xEE, 0x74, 0xB8, 0x6C, 0xF3, 0xC6, 0x22, 0x95, 0xF5, 0xD8, 0xDA, 0xA6, 0xDD, 0x98, 0x76, 0x02, 0xA5, 0x6F, 0x17, 0xD0, 0xF2, 0x44, 0x06, 0x23, 0xAB, 0xE8, 0x5A, 0x63, 0x8D, 0x46, 0xD1, 0x9D, 0xED, 0xD3, 0x63, 0xB5, 0xA6, 0x07, 0xF9, 0x45, 0xA4, 0x6C, 0xC3, 0xD4, 0xA0, 0xBE, 0xF0, 0x59, 0xCF, 0x38, 0xB6, 0x3B, 0x6E, 0x6A, 0xA3, 0x7E, 0xE2, 0xF1, 0xC7, 0x9E, 0x07};
const uint8_t spPOLICE[] PROGMEM = {0x09, 0xD4, 0x90, 0x61, 0x40, 0xD4, 0x96, 0x0E, 0x24, 0x65, 0x59, 0x84, 0xA5, 0x53, 0x8B, 0x52, 0x7B, 0x18, 0xD1, 0xAA, 0x85, 0xDB, 0xD9, 0xB2, 0x22, 0x55, 0x0B, 0x67, 0x93, 0xED, 0x96, 0x8F, 0x82, 0xA7, 0x0C, 0xBB, 0x6E, 0xBF, 0xBC, 0x95, 0xD6, 0x41, 0xD2, 0xBB, 0xBB, 0x61, 0x12, 0xF3, 0x70, 0xD1, 0xCC, 0x47, 0x47, 0x2F, 0xAE, 0x91, 0x77, 0x8F, 0xCE, 0x89, 0x55, 0xAA, 0xAF, 0x2C, 0x5D, 0x22, 0x89, 0x54, 0x4F, 0x1D, 0xA6, 0x06, 0x46, 0x9B, 0xAE, 0x3B, 0xDD, 0x48, 0xD5, 0x0B, 0xD4, 0x6C, 0xF5, 0x9C, 0x4C, 0x2A, 0x96, 0x61, 0x6B, 0xAB, 0x33, 0x50, 0x84, 0xA0, 0x00, 0xB7, 0x45, 0x2A, 0xF0, 0x72, 0xB6, 0x05, 0x16, 0x28, 0xF0, 0x6B, 0xA4, 0x06, 0x14, 0x3C};
const uint8_t spQUIET[] PROGMEM = {0x06, 0xC8, 0xF8, 0xAE, 0x80, 0xF6, 0x1D, 0x0A, 0x78, 0x9F, 0x19, 0xA4, 0xF7, 0x99, 0x65, 0x6D, 0x2F, 0x49, 0x5A, 0xB6, 0x82, 0x3D, 0xCA, 0x12, 0x22, 0xDD, 0xB8, 0xAA, 0xE3, 0x25, 0x64, 0xBD, 0x55, 0x33, 0xB7, 0x47, 0xA8, 0xBC, 0xA9, 0x91, 0xA9, 0x8F, 0xD4, 0xA3, 0x43, 0xA3, 0x13, 0x1F, 0xED, 0x52, 0x7B, 0x78, 0xD7, 0x39, 0xCE, 0x25, 0x8B, 0xCA, 0x89, 0x7C, 0x52, 0xF1, 0x29, 0x11, 0x33, 0xFB, 0xD6, 0xBB, 0xCF, 0xAD, 0xB6, 0x2C, 0xAC, 0x1E, 0xAF, 0x1B, 0x42, 0x58, 0xD8, 0xCF, 0x29, 0xD7, 0xA5, 0x90, 0xD0, 0xB6, 0x8B, 0x80, 0xD7, 0x6E, 0x00, 0x60, 0xC0, 0xF4, 0x15, 0x1A, 0x30, 0x70, 0x42, 0xC7, 0x03};
const uint8_t spRHYTHM[] PROGMEM = {0x2C, 0x92, 0x6D, 0x9A, 0x19, 0x4E, 0x74, 0x34, 0x91, 0x2D, 0xB6, 0x76, 0xF1, 0xE2, 0x63, 0x0C, 0xD1, 0x67, 0x5B, 0x94, 0xDA, 0x18, 0xEE, 0xDA, 0x69, 0x49, 0xB7, 0xD9, 0x25, 0x24, 0xEB, 0x91, 0xC1, 0xBA, 0x4B, 0xE6, 0x93, 0x23, 0xAD, 0xD5, 0xD4, 0xBC, 0x2A, 0xCD, 0x28, 0xE3, 0xE6, 0x56, 0xB1, 0xB3, 0x8B, 0xA1, 0x05, 0xE7, 0xDD, 0x4C, 0x3D, 0xEA, 0x09, 0x2A, 0xB9, 0x7B, 0x76, 0xA5, 0x93, 0x8C, 0x8F, 0x54, 0xCF, 0x45, 0xA7, 0x06, 0x99, 0x15, 0xAA, 0x99, 0x6E, 0x2F, 0x23, 0x2B, 0xF3, 0x25, 0x74, 0xD6, 0x77, 0xDD, 0x7D, 0x3F};
const uint8_t spROCK[] PROGMEM = {0x26, 0xC9, 0xCB, 0x91, 0x1E, 0xCA, 0x7D, 0x8A, 0x31, 0x87, 0xEA, 0xA7, 0x3D, 0x56, 0x2E, 0xCF, 0xB4, 0x68, 0x7A, 0xAC, 0xDC, 0x59, 0x6E, 0x5D, 0xFB, 0x38, 0x35, 0x3B, 0xD2, 0xD6, 0xCE, 0x09, 0xBA, 0x77, 0xA4, 0x4D, 0x9C, 0x1B, 0x47, 0x32, 0x2B, 0xA3, 0x22, 0xAB, 0x84, 0x64, 0xBB, 0x46, 0xBB, 0x5B, 0x62, 0xC0, 0x76, 0x0D, 0x04, 0x4C, 0xCA, 0x02, 0x00, 0x50, 0xC0, 0xBF, 0x4C, 0x01, 0x62, 0xEE, 0x10, 0x20, 0x96, 0x72, 0x0A, 0x1E};
const uint8_t spSCHOOL[] PROGMEM = {0x0A, 0xBC, 0x12, 0x65, 0x81, 0x05, 0x06, 0xFC, 0x16, 0x15, 0x81, 0x07, 0x08, 0x4C, 0x17, 0x05, 0x06, 0x54, 0x35, 0xE3, 0x80, 0x91, 0x2D, 0x85, 0xD0, 0x1C, 0x91, 0x9A, 0x1D, 0x1B, 0xE6, 0xBE, 0x32, 0x54, 0xB2, 0x34, 0xCC, 0x73, 0x87, 0x09, 0x77, 0x2D, 0x84, 0x8D, 0x08, 0x11, 0x5B, 0xD3, 0x45, 0x32, 0x64, 0x64, 0x18, 0xE7, 0xEC, 0xE2, 0xE9, 0x2A, 0x65, 0xAF, 0x46, 0x39, 0xD6, 0x5C, 0x8A, 0xD0, 0x33, 0xCA, 0xB6, 0xAA, 0x8E, 0x38, 0xC3, 0x94, 0x6A, 0xC6, 0x49, 0x17, 0xD5, 0x19, 0xA6, 0xA1, 0x7B, 0xC6, 0xB2, 0x28, 0x4E, 0x3B, 0x1F};
const uint8_t spSQUAT[] PROGMEM = {0x0C, 0xFC, 0x9D, 0xA5, 0xC0, 0x3F, 0x95, 0x1A, 0x58, 0x10, 0xC0, 0x5F, 0x99, 0x1E, 0x38, 0xF0, 0x67, 0xA6, 0x07, 0x0D, 0x14, 0xD9, 0x8B, 0x40, 0xF6, 0xF5, 0x08, 0x74, 0x9D, 0xE3, 0x94, 0xA7, 0x37, 0x9A, 0xDE, 0x44, 0x29, 0x52, 0x57, 0x43, 0xA5, 0x49, 0x52, 0x74, 0xB9, 0x7B, 0xB8, 0xD5, 0x22, 0xE9, 0x2A, 0x57, 0x0B, 0x5B, 0x47, 0xF2, 0xD6, 0x1D, 0xEE, 0xEC, 0x8E, 0x92, 0x65, 0xDA, 0xDC, 0xD3, 0x1D, 0xAD, 0xF3, 0x94, 0x7A, 0x36, 0x3D, 0xDE, 0xE4, 0x29, 0xB3, 0x89, 0x7B, 0x8A, 0xAD, 0x93, 0x61, 0x63, 0x67, 0x15, 0x57, 0xAB, 0x5C, 0x6F, 0x72, 0x2D, 0x08, 0x98, 0x9E, 0x8E, 0x40, 0x14, 0x19, 0x00, 0x60, 0x40, 0x75, 0x1E, 0x06, 0xB4, 0x34, 0x29, 0x40, 0x29, 0x13, 0x0F};
const uint8_t spSUGAR[] PROGMEM = {0x06, 0xA4, 0xBA, 0xE3, 0x41, 0x04, 0x09, 0xE4, 0xB2, 0x9B, 0x41, 0x01, 0x35, 0xF5, 0x26, 0x90, 0x4B, 0xD7, 0x11, 0x2E, 0xB8, 0x69, 0x49, 0xD7, 0xA3, 0x4C, 0x2D, 0xD7, 0x90, 0x3C, 0x57, 0x35, 0xA5, 0x96, 0x99, 0xAB, 0xF6, 0x52, 0x4A, 0x4E, 0x21, 0xAD, 0x48, 0xA5, 0x80, 0x77, 0xEB, 0x2D, 0xE8, 0xE8, 0x92, 0xE9, 0x99, 0x46, 0xD2, 0x55, 0xB5, 0x4B, 0x5B, 0xAD, 0x62, 0x86, 0xD8, 0xBA, 0x6D, 0x9E, 0xBD, 0x4D, 0x9B, 0x8B, 0xED, 0xCC, 0x4B, 0x9D, 0x75, 0x86, 0xA9, 0xAB, 0x73, 0xBF, 0x79, 0x8E, 0x53, 0xCF, 0x07};
const uint8_t spSWEAT[] PROGMEM = {0x02, 0xDC, 0x57, 0x61, 0x81, 0x05, 0x1E, 0x44, 0x10, 0xC0, 0xDE, 0x13, 0x09, 0x04, 0x1D, 0x99, 0x14, 0x77, 0x9D, 0x9C, 0x6A, 0xBB, 0x28, 0xB6, 0xC2, 0xDC, 0xCD, 0xCE, 0x92, 0x62, 0xBB, 0xBB, 0x65, 0xDD, 0x23, 0x75, 0x0A, 0xCF, 0xAC, 0x9A, 0xC7, 0xD8, 0xE4, 0xDE, 0xD5, 0x91, 0x4E, 0x71, 0xC9, 0xCA, 0x7B, 0xED, 0xAC, 0xE2, 0x5C, 0xE9, 0xC6, 0x99, 0x23, 0xC0, 0x64, 0x4D, 0x02, 0xA2, 0xF2, 0xC0, 0x00, 0x00, 0x1C, 0x68, 0xD1, 0x43, 0x81, 0x97, 0xAB, 0x1E};
const uint8_t spTERROR[] PROGMEM = {0x01, 0xBC, 0x31, 0x55, 0xC0, 0x68, 0x5B, 0x01, 0x94, 0x54, 0x79, 0x78, 0x52, 0xA6, 0x1E, 0x11, 0xFA, 0x70, 0x9D, 0x2D, 0xAA, 0x3D, 0xCA, 0x11, 0xBA, 0x4B, 0x76, 0x7A, 0xED, 0x2B, 0xAE, 0x5A, 0x46, 0x6D, 0xCA, 0x4A, 0xCD, 0x32, 0xDD, 0x88, 0x7A, 0x53, 0x8C, 0x65, 0xCE, 0x99, 0x67, 0x99, 0x75, 0x54, 0xB3, 0xC5, 0xD6, 0x72, 0x53, 0x6F, 0xBD, 0x95, 0x6E, 0x97, 0xE8, 0xB9, 0xBF, 0xAE, 0x3D, 0xF6, 0x07};
const uint8_t spWEIRD[] PROGMEM = {0x22, 0xC0, 0xD9, 0x6E, 0x6A, 0x4A, 0x64, 0x50, 0x01, 0x8D, 0x72, 0x53, 0xB3, 0x63, 0xBD, 0x77, 0xD1, 0x56, 0x33, 0x24, 0x37, 0x5A, 0xDD, 0xBE, 0xF2, 0xF0, 0x18, 0x50, 0xFD, 0xB3, 0xE1, 0xE1, 0x25, 0xB0, 0xD2, 0xF7, 0xA4, 0x23, 0x92, 0x17, 0x96, 0xAB, 0x4A, 0x57, 0x5D, 0xB3, 0xC3, 0x4A, 0x2E, 0xB0, 0xD4, 0x44, 0xAD, 0x95, 0x8D, 0x17, 0x9D, 0xF1, 0x46, 0xA3, 0xD8, 0x0A, 0x31, 0xD6, 0x53, 0x46, 0xB5, 0x59, 0xA9, 0xDB, 0x3B, 0x8E, 0xAE, 0x55, 0xAA, 0x7F, 0xA9, 0x5E, 0xC3, 0x05, 0xA3, 0x6C, 0xEF, 0x34, 0xD7, 0x58, 0x59, 0x85, 0x62, 0x76, 0x3E, 0xB7, 0xA4, 0x56, 0xAB, 0xAE, 0x58, 0x6C, 0x60, 0x9D, 0x3E, 0x53, 0xA6, 0xDD, 0xC8, 0xDA, 0x2D, 0xD4, 0xE3, 0xCC, 0x51, 0x46, 0x60, 0xA6, 0xEB, 0x3D, 0x52, 0x80, 0xEC, 0x54, 0x1E};
const uint8_t spWILD[] PROGMEM = {0x22, 0xE0, 0x32, 0x69, 0x6C, 0x4D, 0x6C, 0xF0, 0x21, 0x86, 0x10, 0x48, 0x3F, 0x33, 0x0E, 0x27, 0xD9, 0x0F, 0xC3, 0xD3, 0xB5, 0x53, 0x38, 0x3E, 0x46, 0xB4, 0xE9, 0x70, 0xD1, 0xB6, 0xB4, 0x2C, 0x5B, 0xEE, 0xDA, 0xF5, 0xEA, 0xA3, 0x55, 0xDA, 0xB4, 0x8C, 0xC6, 0x57, 0x1F, 0x63, 0xC2, 0x94, 0x7B, 0x55, 0x39, 0xD6, 0xA6, 0xC8, 0xCC, 0x8E, 0x7C, 0xBC, 0x4B, 0xD2, 0xD9, 0x6D, 0xEB, 0x04, 0x57, 0x28, 0x27, 0x57, 0xCC, 0x8D, 0x27, 0x99, 0xA4, 0xB6, 0x59, 0x85, 0x57, 0x92, 0xA5, 0x6C, 0xBA, 0x22, 0xAD, 0xA4, 0x6D, 0xAE, 0x4B, 0xCD, 0x1E, 0xD5, 0xD3, 0xD8, 0x55, 0xCC, 0x3D, 0xFB, 0x9C, 0x7D, 0xF6, 0x91, 0x86, 0x11, 0xBE, 0x45, 0xD4, 0xD6, 0x74, 0xE1, 0x72, 0x84, 0x2B, 0x0D, 0x02, 0x2C, 0xA4, 0x11, 0xE0, 0x55, 0x44, 0x19, 0x5E, 0x45, 0x84, 0xB4, 0xA1, 0x3C, 0x1E};
const uint8_t spWOLVES[] PROGMEM = {0x2C, 0xE0, 0x9B, 0x2A, 0xEE, 0x71, 0x75, 0xF0, 0x21, 0x78, 0x52, 0x2B, 0xC5, 0xD2, 0x4A, 0xB6, 0x55, 0x4D, 0x71, 0xB8, 0x32, 0xB9, 0xC6, 0x92, 0xF4, 0xF2, 0x23, 0x94, 0x8C, 0x0F, 0xF6, 0x3A, 0x5B, 0x2D, 0xA3, 0x65, 0xBC, 0x92, 0x35, 0x5E, 0x5E, 0xA9, 0x7C, 0xC3, 0x68, 0x3C, 0x7D, 0xCB, 0x52, 0xCD, 0x28, 0xE6, 0x8A, 0x9A, 0x6B, 0xA9, 0xAD, 0xF6, 0xDA, 0x73, 0x8D, 0xD5, 0x55, 0xA9, 0x7A, 0x98, 0xBD, 0x71, 0x28, 0x86, 0x7B, 0x2B, 0x6B, 0xED, 0x5C, 0x72, 0x49, 0xC5, 0x71, 0x4B, 0x17, 0x6B, 0xDC, 0xCA, 0xC2, 0x92, 0xEE, 0x9A, 0xA6, 0x94, 0xEF, 0xD5, 0x5C, 0x55, 0x9D, 0x02, 0xDF, 0xAB, 0x49, 0xF0};
const uint8_t spWORLD[] PROGMEM = {0x22, 0xA0, 0x13, 0xE6, 0xE1, 0x76, 0x7C, 0x08, 0x81, 0xBC, 0x34, 0xB5, 0x70, 0x9C, 0x7D, 0x35, 0x5D, 0x2E, 0xC1, 0xB7, 0x6B, 0x5B, 0xA6, 0x5E, 0x42, 0x5D, 0x0D, 0x77, 0xD7, 0x7E, 0xE5, 0x51, 0x6A, 0x9B, 0x96, 0xBB, 0xFA, 0x6B, 0xAE, 0xBF, 0x71, 0xE7, 0x51, 0xE4, 0x76, 0xB7, 0x88, 0x45, 0xAB, 0x29, 0x3F, 0x29, 0x9A, 0x9D, 0x57, 0x0B, 0xCC, 0x7B, 0x8C, 0x72, 0x97, 0x66, 0x68, 0xBF, 0x72, 0xF4, 0x6A, 0xDB, 0x90, 0x59, 0x67, 0xDB, 0xDC, 0x76, 0x40, 0xBE, 0xAD, 0x98, 0x67, 0xEE, 0xFE, 0xEA, 0xB7, 0x5F, 0x7D, 0xEA, 0xD2, 0xC4, 0xBB, 0x49, 0xF9, 0x56, 0xA7, 0x99, 0x5C, 0xE4, 0xF0, 0x93, 0xCF, 0x0C, 0xEC, 0xCA, 0x0F};
// Trivia: "mosquito" above was an orphaned word found in the ROM -- stored but then
// cut from the game's spelling list. This might be its first appearance in the wild.

// These are pointers to sounds played when buttons are tapped (8 columns, 4 rows):
const uint8_t *taps[] = {
  spA, spB, spC, spD, spE, spF, spG, spH,
  spI, spJ, spK, spL, spM, spN, spO, spP,
  spQ, spR, spS, spT, spU, spV, spW, spX,
  spY, spZ, sp1, sp2, sp3, sp4, sp5, sp6
};

// And these are pointers to sounds played when buttons are held:
const uint8_t *holds[] = {
  spBEEPS1, spSPELL     , spBLOOD   , spDANGER , spEARTH  , spEVERYONE, spTHAT_IS_CORRECT  , spI_WIN,
  spBEEPS2, spNOW_SPELL , spHEAVY   , spLEATHER, spMACHINE, spMONEY   , spYOU_ARE_RIGHT    , spYOU_WIN,
  spBEEPS3, spNEXT_SPELL, spPLEASURE, spPOLICE , spRHYTHM , spROCK    , spTHAT_IS_INCORRECT, spPERFECT_SCORE,
  spBEEPS4, spNOW_TRY   , spSWEAT   , spTERROR , spWEIRD  , spWILD    , spWRONG            , spHERE_IS_YOUR_SCORE
};

// This function fills one column of NeoTrellis buttons to the same color
void setColumn(int n, uint32_t color) {
  for(; n<32; n += 8) trellis.setPixelColor(n, color);
}

// setup function -- runs once at startup

void setup() {
  trellis.begin();

  trellis.fill(trellis.Color(0, 2, 0)); // Most buttons are green (these trigger words when held)
  setColumn(0, trellis.Color(2, 0, 0)); // Leftmost column are the startup beeps
  setColumn(1, trellis.Color(1, 1, 0)); // Second column are the spelling prompts
  setColumn(6, trellis.Color(0, 0, 2)); // Second-to-last column are (mis)spelling responses
  setColumn(7, trellis.Color(1, 0, 1)); // And last column are scoring responses

  // You MUST call this function before issuing Speak & Spell data to the Talkie library.
  // By default, that library emulates the TMS5220, a later speech chip (used in the TI-99/4A
  // and others) that uses a slightly different data format. This puts it in TMS5100 mode:
  voice.mode(TALKIE_TMS5100);
}

// Global variables (used in the loop() function below)

int      key       = -1; // Last key pressed (or -1 if none)
uint32_t pressTime =  0; // Used for timing how long a key is held

// loop function -- after setup, this runs over and over as long as power is on

void loop() {
  trellis.tick(); // Process the Trellis button inputs

  // This while() loop reads all pending button events and discards all but the last.
  // This avoids a mess when multiple keys are mashed (only last one is used).
  keypadEvent e;
  bool        eventHappened = false;
  while(trellis.available()) {
    e             = trellis.read();
    eventHappened = true;
  }

  if(eventHappened) {
    // A button press or release occurred...
    if(e.bit.EVENT == KEY_JUST_PRESSED) {
      key       = e.bit.KEY;            // If pressed, save the key number
      pressTime = millis();             // and note the time it was pressed
    } else if(e.bit.EVENT == KEY_JUST_RELEASED) {
      if(key >= 0) {                    // If a single key was previously pressed
        voice.say(taps[key], false);    // Say corresponding word from "taps" list
        key = -1;                       // and clear the pressed key number
      }
    }
  } else if(key >= 0) {
    // No button events, but a key was previously pressed
    if((millis() - pressTime) >= 750) { // Held down for at least 3/4 sec?
      voice.say(holds[key], false);     // Say corresponding word from "holds" list
      key = -1;                         // and clear held key number (prevents repeat)
    }
  }
}
